{"ast":null,"code":"import { JWT_EXPIRY_TIME } from '../constants/config';\nimport { getRefreshToken, setRefreshToken } from '../storage/Cookie';\nimport API from '../api';\nimport * as authApi from '../api/auth';\nexport const onRefresh = async () => {// try {\n  // \tconst res = await authApi.refresh(getRefreshToken());\n  // \tonLoginSuccess(res.refreshToken, res.accessToken);\n  // } catch (err) {\n  // \tconsole.log(err);\n  // }\n};\nexport const onLoginSuccess = (refreshToken, accessToken) => {\n  setRefreshToken(refreshToken);\n  API.defaults.headers.common['Authorization'] = `Bearer ${accessToken}`; // setTimeout(onRefresh(), JWT_EXPIRY_TIME - 60 * 1000);\n};","map":{"version":3,"names":["JWT_EXPIRY_TIME","getRefreshToken","setRefreshToken","API","authApi","onRefresh","onLoginSuccess","refreshToken","accessToken","defaults","headers","common"],"sources":["/Users/singco/dev/projects/S07P12C104/client/src/utils/auth.js"],"sourcesContent":["import { JWT_EXPIRY_TIME } from '../constants/config';\nimport { getRefreshToken, setRefreshToken } from '../storage/Cookie';\nimport API from '../api';\nimport * as authApi from '../api/auth';\n\nexport const onRefresh = async () => {\n\t\n\t// try {\n\t// \tconst res = await authApi.refresh(getRefreshToken());\n\t// \tonLoginSuccess(res.refreshToken, res.accessToken);\n\t// } catch (err) {\n\t// \tconsole.log(err);\n\t// }\n};\n\nexport const onLoginSuccess = (refreshToken, accessToken) => {\n\tsetRefreshToken(refreshToken);\n\tAPI.defaults.headers.common['Authorization'] = `Bearer ${accessToken}`;\n\n\t// setTimeout(onRefresh(), JWT_EXPIRY_TIME - 60 * 1000);\n};\n"],"mappings":"AAAA,SAASA,eAAT,QAAgC,qBAAhC;AACA,SAASC,eAAT,EAA0BC,eAA1B,QAAiD,mBAAjD;AACA,OAAOC,GAAP,MAAgB,QAAhB;AACA,OAAO,KAAKC,OAAZ,MAAyB,aAAzB;AAEA,OAAO,MAAMC,SAAS,GAAG,YAAY,CAEpC;EACA;EACA;EACA;EACA;EACA;AACA,CARM;AAUP,OAAO,MAAMC,cAAc,GAAG,CAACC,YAAD,EAAeC,WAAf,KAA+B;EAC5DN,eAAe,CAACK,YAAD,CAAf;EACAJ,GAAG,CAACM,QAAJ,CAAaC,OAAb,CAAqBC,MAArB,CAA4B,eAA5B,IAAgD,UAASH,WAAY,EAArE,CAF4D,CAI5D;AACA,CALM"},"metadata":{},"sourceType":"module"}