{"ast":null,"code":"import { rest } from 'msw'; // 로그인\n\nexport const login = rest.get('http://localhost:5000/auth/login', async (req, res, ctx) => {\n  // 카카오에서 받은 인가코드 넘겨줌\n  const {\n    id_token\n  } = req.params;\n  console.log(id_token);\n\n  if (typeof id_token === 'string') {\n    return res(ctx.json({\n      responseType: 'success',\n      refreshToken: 'dfsa;difjsifjslkfjeifsjofj',\n      accessToken: 'jkshfjkldASDJKHASFJKasd123asFJKAHSd',\n      userInfo: {\n        userId: 'id123',\n        userNickname: '유저별명',\n        userImg: '/user/fjkhsdjkfhkljasdf',\n        userEmail: 'wlsgkq123@gmail.com',\n        userAge: 23,\n        userGender: 1,\n        userName: '유저이름',\n        userHeight: 175,\n        userWeight: 70,\n        userFootSize: 255,\n        userRegion: '광주광역시 광산 장덕동',\n        userFollowedCnt: 123,\n        userFollowingCnt: 123,\n        userArticleCnt: 10\n      }\n    }));\n  } else {\n    return res(ctx.json({\n      responseType: 'needToJoin'\n    }));\n  }\n}); //회원가입\n\nexport const signup = rest.post('http://localhost:5000/auth/signup', async (req, res, ctx) => res(ctx.json({\n  refreshToken: 'dfsa;difjsifjslkfjeifsjofj',\n  accessToken: 'jkshfjkldASDJKHASFJKasd123asFJKAHSd',\n  userId: 'singco'\n}))); //정보수정\n\nexport const updateInfo = rest.put('http://localhost:5000/user/modify/info', async (req, res, ctx) => res.json(ctx.json({\n  result: 'success'\n}))); //동네수정\n\nexport const updateRegion = rest.put('http://localhost:5000/user/modify/region', async (req, res, ctx) => res.json(ctx.json({\n  result: 'success'\n}))); // 유저 정보 받아오기\n\nexport const getUserInfo = rest.get('http://localhost:5000/user/:userId', async (req, res, ctx) => res(ctx.json({\n  userInfo: {\n    userId: 'id123',\n    userNickname: '유져별명',\n    userImg: '/user/fjkhsdjkfhkljasdf',\n    userEmail: 'wlsgkq123@gmail.com',\n    userAge: 23,\n    userGender: 1,\n    userName: '유저이름',\n    userHeight: 175,\n    userWeight: 70,\n    userFootSize: 255,\n    userRegion: '광주광역시 광산 장덕동',\n    userFollowedCnt: 123,\n    userFollowingCnt: 123,\n    userArticleCnt: 10\n  }\n}))); // 특정 유저 follow/취소\n\nexport const followUser = rest.post('http://localhost:5000/user/follow', async (req, res, ctx) => {\n  const {\n    userId\n  } = await req.json();\n  return res(ctx.json({\n    result: 'success'\n  }));\n}); // 특정 유저가 작성한 article 리스트\n\nexport const getArticleList = rest.get('http://localhost:5000/user/articleList', async (req, res, ctx) => {\n  const {\n    userId\n  } = await req.json();\n  return res(ctx.json([{\n    articleId: 'id1',\n    articleTitle: '제목입니다',\n    articleImgList: ['/img/asdasf', '/img/asdasf'],\n    articlePrice: 3000,\n    articleContent: '네고 사절',\n    articleLend: 1,\n    articleLastUpdateTime: '2022-07-21',\n    articleLikeCount: 144\n  }, {\n    articleId: 'id2',\n    articleTitle: '2번쨰 제목입니다',\n    articleImgList: ['/img/asdasf', '/img/asdasf'],\n    articlePrice: 4000,\n    articleContent: '네고 사절ㅁㄴㅇㅁㄴㅇㅁㄴㅇ',\n    articleLend: 1,\n    articleLastUpdateTime: '2022-07-21',\n    articleLikeCount: 144\n  }]));\n});","map":{"version":3,"names":["rest","login","get","req","res","ctx","id_token","params","console","log","json","responseType","refreshToken","accessToken","userInfo","userId","userNickname","userImg","userEmail","userAge","userGender","userName","userHeight","userWeight","userFootSize","userRegion","userFollowedCnt","userFollowingCnt","userArticleCnt","signup","post","updateInfo","put","result","updateRegion","getUserInfo","followUser","getArticleList","articleId","articleTitle","articleImgList","articlePrice","articleContent","articleLend","articleLastUpdateTime","articleLikeCount"],"sources":["/Users/singco/dev/projects/S07P12C104/client/src/mocks/handlers/user.js"],"sourcesContent":["import { rest } from 'msw';\n// 로그인\nexport const login = rest.get('http://localhost:5000/auth/login', async (req, res, ctx) => {\n\t// 카카오에서 받은 인가코드 넘겨줌\n\tconst { id_token } = req.params;\n\tconsole.log(id_token);\n\tif (typeof id_token === 'string') {\n\t\treturn res(\n\t\t\tctx.json({\n\t\t\t\tresponseType: 'success',\n\t\t\t\trefreshToken: 'dfsa;difjsifjslkfjeifsjofj',\n\t\t\t\taccessToken: 'jkshfjkldASDJKHASFJKasd123asFJKAHSd',\n\t\t\t\tuserInfo: {\n\t\t\t\t\tuserId: 'id123',\n\t\t\t\t\tuserNickname: '유저별명',\n\t\t\t\t\tuserImg: '/user/fjkhsdjkfhkljasdf',\n\t\t\t\t\tuserEmail: 'wlsgkq123@gmail.com',\n\t\t\t\t\tuserAge: 23,\n\t\t\t\t\tuserGender: 1,\n\t\t\t\t\tuserName: '유저이름',\n\t\t\t\t\tuserHeight: 175,\n\t\t\t\t\tuserWeight: 70,\n\t\t\t\t\tuserFootSize: 255,\n\t\t\t\t\tuserRegion: '광주광역시 광산 장덕동',\n\t\t\t\t\tuserFollowedCnt: 123,\n\t\t\t\t\tuserFollowingCnt: 123,\n\t\t\t\t\tuserArticleCnt: 10,\n\t\t\t\t},\n\t\t\t}),\n\t\t);\n\t} else {\n\t\treturn res(ctx.json({ responseType: 'needToJoin' }));\n\t}\n});\n\n//회원가입\nexport const signup = rest.post('http://localhost:5000/auth/signup', async (req, res, ctx) =>\n\tres(\n\t\tctx.json({\n\t\t\trefreshToken: 'dfsa;difjsifjslkfjeifsjofj',\n\t\t\taccessToken: 'jkshfjkldASDJKHASFJKasd123asFJKAHSd',\n\t\t\tuserId: 'singco',\n\t\t}),\n\t),\n);\n\n//정보수정\nexport const updateInfo = rest.put(\n\t'http://localhost:5000/user/modify/info',\n\tasync (req, res, ctx) =>\n\t\tres.json(\n\t\t\tctx.json({\n\t\t\t\tresult: 'success',\n\t\t\t}),\n\t\t),\n);\n\n//동네수정\nexport const updateRegion = rest.put(\n\t'http://localhost:5000/user/modify/region',\n\tasync (req, res, ctx) =>\n\t\tres.json(\n\t\t\tctx.json({\n\t\t\t\tresult: 'success',\n\t\t\t}),\n\t\t),\n);\n\n// 유저 정보 받아오기\nexport const getUserInfo = rest.get('http://localhost:5000/user/:userId', async (req, res, ctx) =>\n\tres(\n\t\tctx.json({\n\t\t\tuserInfo: {\n\t\t\t\tuserId: 'id123',\n\t\t\t\tuserNickname: '유져별명',\n\t\t\t\tuserImg: '/user/fjkhsdjkfhkljasdf',\n\t\t\t\tuserEmail: 'wlsgkq123@gmail.com',\n\t\t\t\tuserAge: 23,\n\t\t\t\tuserGender: 1,\n\t\t\t\tuserName: '유저이름',\n\t\t\t\tuserHeight: 175,\n\t\t\t\tuserWeight: 70,\n\t\t\t\tuserFootSize: 255,\n\t\t\t\tuserRegion: '광주광역시 광산 장덕동',\n\t\t\t\tuserFollowedCnt: 123,\n\t\t\t\tuserFollowingCnt: 123,\n\t\t\t\tuserArticleCnt: 10,\n\t\t\t},\n\t\t}),\n\t),\n);\n\n// 특정 유저 follow/취소\nexport const followUser = rest.post('http://localhost:5000/user/follow', async (req, res, ctx) => {\n\tconst { userId } = await req.json();\n\treturn res(ctx.json({ result: 'success' }));\n});\n\n// 특정 유저가 작성한 article 리스트\nexport const getArticleList = rest.get(\n\t'http://localhost:5000/user/articleList',\n\tasync (req, res, ctx) => {\n\t\tconst { userId } = await req.json();\n\t\treturn res(\n\t\t\tctx.json([\n\t\t\t\t{\n\t\t\t\t\tarticleId: 'id1',\n\t\t\t\t\tarticleTitle: '제목입니다',\n\t\t\t\t\tarticleImgList: ['/img/asdasf', '/img/asdasf'],\n\t\t\t\t\tarticlePrice: 3000,\n\t\t\t\t\tarticleContent: '네고 사절',\n\t\t\t\t\tarticleLend: 1,\n\t\t\t\t\tarticleLastUpdateTime: '2022-07-21',\n\t\t\t\t\tarticleLikeCount: 144,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tarticleId: 'id2',\n\t\t\t\t\tarticleTitle: '2번쨰 제목입니다',\n\t\t\t\t\tarticleImgList: ['/img/asdasf', '/img/asdasf'],\n\t\t\t\t\tarticlePrice: 4000,\n\t\t\t\t\tarticleContent: '네고 사절ㅁㄴㅇㅁㄴㅇㅁㄴㅇ',\n\t\t\t\t\tarticleLend: 1,\n\t\t\t\t\tarticleLastUpdateTime: '2022-07-21',\n\t\t\t\t\tarticleLikeCount: 144,\n\t\t\t\t},\n\t\t\t]),\n\t\t);\n\t},\n);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}