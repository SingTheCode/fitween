{"ast":null,"code":"import API from './index';\nexport const login = async body => {\n  try {\n    alert(body);\n    const res = await API.get('/auth/login', {\n      params: body\n    });\n    return res.data;\n  } catch (err) {\n    throw err;\n  }\n};\nexport const signup = async body => {\n  try {\n    const res = await API.post('/auth/signup', body);\n    return res.data;\n  } catch (err) {\n    throw err;\n  }\n};\nexport const logout = async body => {\n  try {\n    const res = await API.post('/auth/logout', body);\n    return res;\n  } catch (err) {\n    throw err;\n  }\n};\nexport const duplicationCheck = async nickname => {\n  try {\n    const res = await API.get('/auth/duplicationcheck', {\n      params: {\n        nickname\n      }\n    });\n    return res.data;\n  } catch (err) {\n    throw err;\n  }\n};\nexport const refresh = async body => {\n  try {\n    const res = await API.post('/token/refresh', body);\n    return res.data;\n  } catch (err) {\n    throw err;\n  }\n};\nexport const deleteUser = async () => {\n  try {\n    const res = await API.delete('/users');\n    return res.data;\n  } catch (err) {\n    throw err;\n  }\n};","map":{"version":3,"names":["API","login","body","alert","res","get","params","data","err","signup","post","logout","duplicationCheck","nickname","refresh","deleteUser","delete"],"sources":["/Users/singco/dev/projects/S07P12C104/client/src/api/auth.js"],"sourcesContent":["import API from './index';\n\nexport const login = async body => {\n\ttry {\n\t\talert(body);\n\t\tconst res = await API.get('/auth/login', { params: body });\n\t\treturn res.data;\n\t} catch (err) {\n\t\tthrow err;\n\t}\n};\n\nexport const signup = async body => {\n\ttry {\n\t\tconst res = await API.post('/auth/signup', body);\n\t\treturn res.data;\n\t} catch (err) {\n\t\tthrow err;\n\t}\n};\n\nexport const logout = async body => {\n\ttry {\n\t\tconst res = await API.post('/auth/logout', body);\n\t\treturn res;\n\t} catch (err) {\n\t\tthrow err;\n\t}\n};\n\nexport const duplicationCheck = async nickname => {\n\ttry {\n\t\tconst res = await API.get('/auth/duplicationcheck', { params: { nickname } });\n\t\treturn res.data;\n\t} catch (err) {\n\t\tthrow err;\n\t}\n};\n\nexport const refresh = async body => {\n\ttry {\n\t\tconst res = await API.post('/token/refresh', body);\n\t\treturn res.data;\n\t} catch (err) {\n\t\tthrow err;\n\t}\n};\n\nexport const deleteUser = async () => {\n\ttry {\n\t\tconst res = await API.delete('/users');\n\t\treturn res.data;\n\t} catch (err) {\n\t\tthrow err;\n\t}\n};\n"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,SAAhB;AAEA,OAAO,MAAMC,KAAK,GAAG,MAAMC,IAAN,IAAc;EAClC,IAAI;IACHC,KAAK,CAACD,IAAD,CAAL;IACA,MAAME,GAAG,GAAG,MAAMJ,GAAG,CAACK,GAAJ,CAAQ,aAAR,EAAuB;MAAEC,MAAM,EAAEJ;IAAV,CAAvB,CAAlB;IACA,OAAOE,GAAG,CAACG,IAAX;EACA,CAJD,CAIE,OAAOC,GAAP,EAAY;IACb,MAAMA,GAAN;EACA;AACD,CARM;AAUP,OAAO,MAAMC,MAAM,GAAG,MAAMP,IAAN,IAAc;EACnC,IAAI;IACH,MAAME,GAAG,GAAG,MAAMJ,GAAG,CAACU,IAAJ,CAAS,cAAT,EAAyBR,IAAzB,CAAlB;IACA,OAAOE,GAAG,CAACG,IAAX;EACA,CAHD,CAGE,OAAOC,GAAP,EAAY;IACb,MAAMA,GAAN;EACA;AACD,CAPM;AASP,OAAO,MAAMG,MAAM,GAAG,MAAMT,IAAN,IAAc;EACnC,IAAI;IACH,MAAME,GAAG,GAAG,MAAMJ,GAAG,CAACU,IAAJ,CAAS,cAAT,EAAyBR,IAAzB,CAAlB;IACA,OAAOE,GAAP;EACA,CAHD,CAGE,OAAOI,GAAP,EAAY;IACb,MAAMA,GAAN;EACA;AACD,CAPM;AASP,OAAO,MAAMI,gBAAgB,GAAG,MAAMC,QAAN,IAAkB;EACjD,IAAI;IACH,MAAMT,GAAG,GAAG,MAAMJ,GAAG,CAACK,GAAJ,CAAQ,wBAAR,EAAkC;MAAEC,MAAM,EAAE;QAAEO;MAAF;IAAV,CAAlC,CAAlB;IACA,OAAOT,GAAG,CAACG,IAAX;EACA,CAHD,CAGE,OAAOC,GAAP,EAAY;IACb,MAAMA,GAAN;EACA;AACD,CAPM;AASP,OAAO,MAAMM,OAAO,GAAG,MAAMZ,IAAN,IAAc;EACpC,IAAI;IACH,MAAME,GAAG,GAAG,MAAMJ,GAAG,CAACU,IAAJ,CAAS,gBAAT,EAA2BR,IAA3B,CAAlB;IACA,OAAOE,GAAG,CAACG,IAAX;EACA,CAHD,CAGE,OAAOC,GAAP,EAAY;IACb,MAAMA,GAAN;EACA;AACD,CAPM;AASP,OAAO,MAAMO,UAAU,GAAG,YAAY;EACrC,IAAI;IACH,MAAMX,GAAG,GAAG,MAAMJ,GAAG,CAACgB,MAAJ,CAAW,QAAX,CAAlB;IACA,OAAOZ,GAAG,CAACG,IAAX;EACA,CAHD,CAGE,OAAOC,GAAP,EAAY;IACb,MAAMA,GAAN;EACA;AACD,CAPM"},"metadata":{},"sourceType":"module"}