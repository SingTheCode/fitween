{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/singco/dev/projects/S07P12C104/client/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _asyncToGenerator = require(\"/Users/singco/dev/projects/S07P12C104/client/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Gracefully handles a given Promise factory.\n * @example\n * cosnt [error, data] = await until(() => asyncAction())\n */\n\nexports.until = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(promise) {\n    var data;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return promise().catch(function (error) {\n              throw error;\n            });\n\n          case 3:\n            data = _context.sent;\n            return _context.abrupt(\"return\", [null, data]);\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            return _context.abrupt(\"return\", [_context.t0, null]);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 7]]);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["Object","defineProperty","exports","value","until","promise","catch","error","data"],"sources":["/Users/singco/dev/projects/S07P12C104/client/node_modules/@open-draft/until/lib/until.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Gracefully handles a given Promise factory.\n * @example\n * cosnt [error, data] = await until(() => asyncAction())\n */\nexports.until = async (promise) => {\n    try {\n        const data = await promise().catch((error) => {\n            throw error;\n        });\n        return [null, data];\n    }\n    catch (error) {\n        return [error, null];\n    }\n};\n"],"mappings":"AAAA;;;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACA;AACA;AACA;AACA;AACA;;AACAD,OAAO,CAACE,KAAR;EAAA,sEAAgB,iBAAOC,OAAP;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA;YAAA,OAEWA,OAAO,GAAGC,KAAV,CAAgB,UAACC,KAAD,EAAW;cAC1C,MAAMA,KAAN;YACH,CAFkB,CAFX;;UAAA;YAEFC,IAFE;YAAA,iCAKD,CAAC,IAAD,EAAOA,IAAP,CALC;;UAAA;YAAA;YAAA;YAAA,iCAQD,cAAQ,IAAR,CARC;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAhB;;EAAA;IAAA;EAAA;AAAA"},"metadata":{},"sourceType":"script"}