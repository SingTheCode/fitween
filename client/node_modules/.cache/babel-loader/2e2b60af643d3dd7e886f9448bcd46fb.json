{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/Users/singco/dev/projects/S07P12C104/client/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\n\nvar _classCallCheck = require(\"/Users/singco/dev/projects/S07P12C104/client/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/Users/singco/dev/projects/S07P12C104/client/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.store = exports.PERSISTENCY_KEY = void 0;\n\nvar set_cookie_parser_1 = require(\"set-cookie-parser\");\n\nexports.PERSISTENCY_KEY = 'MSW_COOKIE_STORE';\n\nfunction supportsLocalStorage() {\n  try {\n    if (localStorage == null) {\n      return false;\n    }\n\n    var testKey = exports.PERSISTENCY_KEY + '_test';\n    localStorage.setItem(testKey, 'test');\n    localStorage.getItem(testKey);\n    localStorage.removeItem(testKey);\n    return true;\n  } catch (error) {\n    return false;\n  }\n}\n\nvar CookieStore = /*#__PURE__*/function () {\n  function CookieStore() {\n    _classCallCheck(this, CookieStore);\n\n    this.store = new Map();\n  }\n  /**\n   * Sets the given request cookies into the store.\n   * Respects the `request.credentials` policy.\n   */\n\n\n  _createClass(CookieStore, [{\n    key: \"add\",\n    value: function add(request, response) {\n      var _this = this;\n\n      if (request.credentials === 'omit') {\n        return;\n      }\n\n      var requestUrl = new URL(request.url);\n      var responseCookies = response.headers.get('set-cookie');\n\n      if (!responseCookies) {\n        return;\n      }\n\n      var now = Date.now();\n      var parsedResponseCookies = set_cookie_parser_1.parse(responseCookies).map(function (_a) {\n        var maxAge = _a.maxAge,\n            cookie = __rest(_a, [\"maxAge\"]);\n\n        return Object.assign(Object.assign({}, cookie), {\n          expires: maxAge === undefined ? cookie.expires : new Date(now + maxAge * 1000),\n          maxAge: maxAge\n        });\n      });\n      var prevCookies = this.store.get(requestUrl.origin) || new Map();\n      parsedResponseCookies.forEach(function (cookie) {\n        _this.store.set(requestUrl.origin, prevCookies.set(cookie.name, cookie));\n      });\n    }\n    /**\n     * Returns cookies relevant to the given request\n     * and its `request.credentials` policy.\n     */\n\n  }, {\n    key: \"get\",\n    value: function get(request) {\n      this.deleteExpiredCookies();\n      var requestUrl = new URL(request.url);\n      var originCookies = this.store.get(requestUrl.origin) || new Map();\n\n      switch (request.credentials) {\n        case 'include':\n          {\n            // Support running this method in Node.js.\n            if (typeof document === 'undefined') {\n              return originCookies;\n            }\n\n            var documentCookies = set_cookie_parser_1.parse(document.cookie);\n            documentCookies.forEach(function (cookie) {\n              originCookies.set(cookie.name, cookie);\n            });\n            return originCookies;\n          }\n\n        case 'same-origin':\n          {\n            return originCookies;\n          }\n\n        default:\n          return new Map();\n      }\n    }\n    /**\n     * Returns a collection of all stored cookies.\n     */\n\n  }, {\n    key: \"getAll\",\n    value: function getAll() {\n      this.deleteExpiredCookies();\n      return this.store;\n    }\n    /**\n     * Deletes all cookies associated with the given request.\n     */\n\n  }, {\n    key: \"deleteAll\",\n    value: function deleteAll(request) {\n      var requestUrl = new URL(request.url);\n      this.store.delete(requestUrl.origin);\n    }\n    /**\n     * Clears the entire cookie store.\n     */\n\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.store.clear();\n    }\n    /**\n     * Hydrates the virtual cookie store from the `localStorage` if defined.\n     */\n\n  }, {\n    key: \"hydrate\",\n    value: function hydrate() {\n      var _this2 = this;\n\n      if (!supportsLocalStorage()) {\n        return;\n      }\n\n      var persistedCookies = localStorage.getItem(exports.PERSISTENCY_KEY);\n\n      if (!persistedCookies) {\n        return;\n      }\n\n      try {\n        var parsedCookies = JSON.parse(persistedCookies);\n        parsedCookies.forEach(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              origin = _ref2[0],\n              cookies = _ref2[1];\n\n          _this2.store.set(origin, new Map(cookies.map(function (_a) {\n            var _a2 = _slicedToArray(_a, 2),\n                token = _a2[0],\n                _b = _a2[1],\n                expires = _b.expires,\n                cookie = __rest(_b, [\"expires\"]);\n\n            return [token, expires === undefined ? cookie : Object.assign(Object.assign({}, cookie), {\n              expires: new Date(expires)\n            })];\n          })));\n        });\n      } catch (error) {\n        console.warn(\"\\n[virtual-cookie] Failed to parse a stored cookie from the localStorage (key \\\"\".concat(exports.PERSISTENCY_KEY, \"\\\").\\n\\nStored value:\\n\").concat(localStorage.getItem(exports.PERSISTENCY_KEY), \"\\n\\nThrown exception:\\n\").concat(error, \"\\n\\nInvalid value has been removed from localStorage to prevent subsequent failed parsing attempts.\"));\n        localStorage.removeItem(exports.PERSISTENCY_KEY);\n      }\n    }\n    /**\n     * Persists the current virtual cookies into the `localStorage` if defined,\n     * so they are available on the next page load.\n     */\n\n  }, {\n    key: \"persist\",\n    value: function persist() {\n      if (!supportsLocalStorage()) {\n        return;\n      }\n\n      var serializedCookies = Array.from(this.store.entries()).map(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 2),\n            origin = _ref4[0],\n            cookies = _ref4[1];\n\n        return [origin, Array.from(cookies.entries())];\n      });\n      localStorage.setItem(exports.PERSISTENCY_KEY, JSON.stringify(serializedCookies));\n    }\n  }, {\n    key: \"deleteExpiredCookies\",\n    value: function deleteExpiredCookies() {\n      var _this3 = this;\n\n      var now = Date.now();\n      this.store.forEach(function (originCookies, origin) {\n        originCookies.forEach(function (_ref5) {\n          var expires = _ref5.expires,\n              name = _ref5.name;\n\n          if (expires !== undefined && expires.getTime() <= now) {\n            originCookies.delete(name);\n          }\n        });\n\n        if (originCookies.size === 0) {\n          _this3.store.delete(origin);\n        }\n      });\n    }\n  }]);\n\n  return CookieStore;\n}();\n\nexports.store = new CookieStore();","map":{"version":3,"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","defineProperty","exports","value","store","PERSISTENCY_KEY","set_cookie_parser_1","require","supportsLocalStorage","localStorage","testKey","setItem","getItem","removeItem","error","CookieStore","Map","request","response","credentials","requestUrl","URL","url","responseCookies","headers","get","now","Date","parsedResponseCookies","parse","map","_a","maxAge","cookie","assign","expires","undefined","prevCookies","origin","forEach","set","name","deleteExpiredCookies","originCookies","document","documentCookies","delete","clear","persistedCookies","parsedCookies","JSON","cookies","token","_b","console","warn","serializedCookies","Array","from","entries","stringify","getTime","size"],"sources":["/Users/singco/dev/projects/S07P12C104/client/node_modules/@mswjs/cookies/lib/store.js"],"sourcesContent":["\"use strict\";\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.store = exports.PERSISTENCY_KEY = void 0;\nconst set_cookie_parser_1 = require(\"set-cookie-parser\");\nexports.PERSISTENCY_KEY = 'MSW_COOKIE_STORE';\nfunction supportsLocalStorage() {\n    try {\n        if (localStorage == null) {\n            return false;\n        }\n        const testKey = exports.PERSISTENCY_KEY + '_test';\n        localStorage.setItem(testKey, 'test');\n        localStorage.getItem(testKey);\n        localStorage.removeItem(testKey);\n        return true;\n    }\n    catch (error) {\n        return false;\n    }\n}\nclass CookieStore {\n    constructor() {\n        this.store = new Map();\n    }\n    /**\n     * Sets the given request cookies into the store.\n     * Respects the `request.credentials` policy.\n     */\n    add(request, response) {\n        if (request.credentials === 'omit') {\n            return;\n        }\n        const requestUrl = new URL(request.url);\n        const responseCookies = response.headers.get('set-cookie');\n        if (!responseCookies) {\n            return;\n        }\n        const now = Date.now();\n        const parsedResponseCookies = set_cookie_parser_1.parse(responseCookies).map((_a) => {\n            var { maxAge } = _a, cookie = __rest(_a, [\"maxAge\"]);\n            return (Object.assign(Object.assign({}, cookie), { expires: maxAge === undefined ? cookie.expires : new Date(now + maxAge * 1000), maxAge }));\n        });\n        const prevCookies = this.store.get(requestUrl.origin) || new Map();\n        parsedResponseCookies.forEach((cookie) => {\n            this.store.set(requestUrl.origin, prevCookies.set(cookie.name, cookie));\n        });\n    }\n    /**\n     * Returns cookies relevant to the given request\n     * and its `request.credentials` policy.\n     */\n    get(request) {\n        this.deleteExpiredCookies();\n        const requestUrl = new URL(request.url);\n        const originCookies = this.store.get(requestUrl.origin) || new Map();\n        switch (request.credentials) {\n            case 'include': {\n                // Support running this method in Node.js.\n                if (typeof document === 'undefined') {\n                    return originCookies;\n                }\n                const documentCookies = set_cookie_parser_1.parse(document.cookie);\n                documentCookies.forEach((cookie) => {\n                    originCookies.set(cookie.name, cookie);\n                });\n                return originCookies;\n            }\n            case 'same-origin': {\n                return originCookies;\n            }\n            default:\n                return new Map();\n        }\n    }\n    /**\n     * Returns a collection of all stored cookies.\n     */\n    getAll() {\n        this.deleteExpiredCookies();\n        return this.store;\n    }\n    /**\n     * Deletes all cookies associated with the given request.\n     */\n    deleteAll(request) {\n        const requestUrl = new URL(request.url);\n        this.store.delete(requestUrl.origin);\n    }\n    /**\n     * Clears the entire cookie store.\n     */\n    clear() {\n        this.store.clear();\n    }\n    /**\n     * Hydrates the virtual cookie store from the `localStorage` if defined.\n     */\n    hydrate() {\n        if (!supportsLocalStorage()) {\n            return;\n        }\n        const persistedCookies = localStorage.getItem(exports.PERSISTENCY_KEY);\n        if (!persistedCookies) {\n            return;\n        }\n        try {\n            const parsedCookies = JSON.parse(persistedCookies);\n            parsedCookies.forEach(([origin, cookies]) => {\n                this.store.set(origin, new Map(cookies.map((_a) => {\n                    var [token, _b] = _a, { expires } = _b, cookie = __rest(_b, [\"expires\"]);\n                    return [\n                        token,\n                        expires === undefined\n                            ? cookie\n                            : Object.assign(Object.assign({}, cookie), { expires: new Date(expires) }),\n                    ];\n                })));\n            });\n        }\n        catch (error) {\n            console.warn(`\n[virtual-cookie] Failed to parse a stored cookie from the localStorage (key \"${exports.PERSISTENCY_KEY}\").\n\nStored value:\n${localStorage.getItem(exports.PERSISTENCY_KEY)}\n\nThrown exception:\n${error}\n\nInvalid value has been removed from localStorage to prevent subsequent failed parsing attempts.`);\n            localStorage.removeItem(exports.PERSISTENCY_KEY);\n        }\n    }\n    /**\n     * Persists the current virtual cookies into the `localStorage` if defined,\n     * so they are available on the next page load.\n     */\n    persist() {\n        if (!supportsLocalStorage()) {\n            return;\n        }\n        const serializedCookies = Array.from(this.store.entries()).map(([origin, cookies]) => {\n            return [origin, Array.from(cookies.entries())];\n        });\n        localStorage.setItem(exports.PERSISTENCY_KEY, JSON.stringify(serializedCookies));\n    }\n    deleteExpiredCookies() {\n        const now = Date.now();\n        this.store.forEach((originCookies, origin) => {\n            originCookies.forEach(({ expires, name }) => {\n                if (expires !== undefined && expires.getTime() <= now) {\n                    originCookies.delete(name);\n                }\n            });\n            if (originCookies.size === 0) {\n                this.store.delete(origin);\n            }\n        });\n    }\n}\nexports.store = new CookieStore();\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}