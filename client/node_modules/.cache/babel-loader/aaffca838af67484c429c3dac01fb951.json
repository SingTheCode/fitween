{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/singco/dev/projects/S07P12C104/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";import _regeneratorRuntime from\"/Users/singco/dev/projects/S07P12C104/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/singco/dev/projects/S07P12C104/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _toConsumableArray from\"/Users/singco/dev/projects/S07P12C104/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/singco/dev/projects/S07P12C104/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";var _templateObject,_templateObject2,_templateObject3;import React,{useEffect,useRef,useState}from'react';/** @jsxImportSource @emotion/react */import{css}from'@emotion/react';import{useLocation,useNavigate}from'react-router-dom';import{over}from'stompjs';import SockJS from'sockjs-client';import{v4 as uuid}from'uuid';import TopNavigation from'../../components/Common/TopNavigation/TopNavigation';import{ReactComponent as SendIcon}from'../../assets/send.svg';import colors from'../../constants/colors';import commonStyle from'../../constants/commonStyle';import{useGlobalContext}from'../../contexts/GlobalContext';import Main from'../../components/Common/Main/Main';import Message from'../../components/Chat/Message';import Date from'../../components/Chat/Date';import*as ChatApi from'../../api/chat';import{jsx as _jsx}from\"@emotion/react/jsx-runtime\";import{jsxs as _jsxs}from\"@emotion/react/jsx-runtime\";import{Fragment as _Fragment}from\"@emotion/react/jsx-runtime\";var stompClient=null;var ChatRoom=function ChatRoom(){var inputRef=useRef(null);var _useState=useState(''),_useState2=_slicedToArray(_useState,2),message=_useState2[0],setMessage=_useState2[1];var _useLocation=useLocation(),state=_useLocation.state;var _useState3=useState(state.roomId),_useState4=_slicedToArray(_useState3,2),roomId=_useState4[0],setRoomId=_useState4[1];var _useState5=useState(state.receiverId),_useState6=_slicedToArray(_useState5,2),receiverId=_useState6[0],setReceiverId=_useState6[1];// todo: 유저정보 컨텍스트에서 가져와야함.\nvar _useState7=useState('myId'),_useState8=_slicedToArray(_useState7,2),userId=_useState8[0],setUserId=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),chats=_useState10[0],setChats=_useState10[1];var navigate=useNavigate();var sendChatHandler=function sendChatHandler(){console.log('채팅전송개발중');if(stompClient){var chatMessage={senderId:userId,receiverId:receiverId,roomId:roomId,message:message};stompClient.send(\"/app/chat/message\",{},JSON.stringify(chatMessage));}setMessage('');inputRef.current.focus();};var onMessageReceived=function onMessageReceived(payload){var payloadData=JSON.parse(payload.body);chats.push(payloadData);setChats(_toConsumableArray(chats));};var onError=function onError(err){console.log(err);throw err;};var onConnected=function onConnected(){console.log('연결완료');stompClient.subscribe(\"/topic/chat/room/\".concat(roomId),onMessageReceived);};var _useGlobalContext=useGlobalContext(),setHasBottom=_useGlobalContext.setHasBottom;useEffect(function(){setHasBottom(true);return function(){setHasBottom(false);};},[]);// roomId에 따라 채팅로그 받아오기\nuseEffect(function(){var fetchChatLogs=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var data;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return ChatApi.getChagLogs(roomId);case 3:data=_context.sent;setChats(data);_context.next=10;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 10:case\"end\":return _context.stop();}}},_callee,null,[[0,7]]);}));return function fetchChatLogs(){return _ref.apply(this,arguments);};}();var findRoom=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var _yield$ChatApi$findRo,_roomId;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return ChatApi.findRoom(receiverId);case 3:_yield$ChatApi$findRo=_context2.sent;_roomId=_yield$ChatApi$findRo.roomId;setRoomId(_roomId);_context2.next=11;break;case 8:_context2.prev=8;_context2.t0=_context2[\"catch\"](0);console.log(_context2.t0);case 11:case\"end\":return _context2.stop();}}},_callee2,null,[[0,8]]);}));return function findRoom(){return _ref2.apply(this,arguments);};}();if(roomId){fetchChatLogs();}else{findRoom();}},[roomId]);// 소켓연결\nuseEffect(function(){var Sock=new SockJS(process.env.REACT_APP_SOCKET_URI);stompClient=over(Sock);stompClient.connect({},onConnected,onError);return function(){if(stompClient.connected)stompClient.disconnect();};},[]);return _jsxs(_Fragment,{children:[_jsx(TopNavigation,{backClick:true,onBackClick:function onBackClick(){return navigate(-1);},centerContent:receiverId}),_jsx(Main,{children:chats.map(function(chat){return _jsx(Message,{message:chat.message,isMine:chat.senderId===userId,sendTime:chat.sendTime,isRead:chat.isRead},uuid());})}),_jsxs(\"div\",{className:\"input-wrapper\",css:css(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n\\t\\t\\t\\t\\tposition: fixed;\\n\\t\\t\\t\\t\\tbottom: 0;\\n\\t\\t\\t\\t\\twidth: 100%;\\n\\t\\t\\t\\t\\tmax-width: 1200px;\\n\\t\\t\\t\\t\\theight: \",\";\\n\\t\\t\\t\\t\\tbox-shadow: 0 -0.2px \",\";\\n\\t\\t\\t\\t\\tbackground-color: \",\";\\n\\t\\t\\t\\t\\tdisplay: flex;\\n\\t\\t\\t\\t\\tjustify-content: center;\\n\\t\\t\\t\\t\\talign-items: center;\\n\\t\\t\\t\\t\"])),commonStyle.bottomHeaderHeight,colors.text,colors.white),children:[_jsx(\"input\",{ref:inputRef,value:message,onChange:function onChange(e){return setMessage(e.target.value);},type:\"text\",placeholder:\"\\uBA54\\uC2DC\\uC9C0\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",css:css(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n\\t\\t\\t\\t\\t\\twidth: 90%;\\n\\t\\t\\t\\t\\t\\tpadding: 10px 45px 10px 10px;\\n\\t\\t\\t\\t\\t\\tborder: 2px solid \",\";\\n\\t\\t\\t\\t\\t\\tfont-size: 16px;\\n\\t\\t\\t\\t\\t\\tfont-family: 'Regular';\\n\\t\\t\\t\\t\\t\\tborder-radius: 31px;\\n\\t\\t\\t\\t\\t\\t&:active,\\n\\t\\t\\t\\t\\t\\t&:focus {\\n\\t\\t\\t\\t\\t\\t\\toutline: none;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\"])),colors.text)}),_jsx(\"div\",{css:css(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n\\t\\t\\t\\t\\t\\tposition: absolute;\\n\\t\\t\\t\\t\\t\\tright: 5%;\\n\\t\\t\\t\\t\\t\\tpadding: 10px;\\n\\t\\t\\t\\t\\t\\tdisplay: flex;\\n\\t\\t\\t\\t\\t\\tjustify-content: center;\\n\\t\\t\\t\\t\\t\\talign-items: center;\\n\\t\\t\\t\\t\\t\"]))),children:_jsx(SendIcon,{onClick:sendChatHandler,width:\"28\",height:\"28\",fill:colors.text})})]})]});};export default ChatRoom;","map":{"version":3,"names":["React","useEffect","useRef","useState","css","useLocation","useNavigate","over","SockJS","v4","uuid","TopNavigation","ReactComponent","SendIcon","colors","commonStyle","useGlobalContext","Main","Message","Date","ChatApi","stompClient","ChatRoom","inputRef","message","setMessage","state","roomId","setRoomId","receiverId","setReceiverId","userId","setUserId","chats","setChats","navigate","sendChatHandler","console","log","chatMessage","senderId","send","JSON","stringify","current","focus","onMessageReceived","payload","payloadData","parse","body","push","onError","err","onConnected","subscribe","setHasBottom","fetchChatLogs","getChagLogs","data","findRoom","Sock","process","env","REACT_APP_SOCKET_URI","connect","connected","disconnect","map","chat","sendTime","isRead","bottomHeaderHeight","text","white","e","target","value"],"sources":["/Users/singco/dev/projects/S07P12C104/client/src/pages/Chat/ChatRoom.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { over } from 'stompjs';\nimport SockJS from 'sockjs-client';\nimport { v4 as uuid } from 'uuid';\n\nimport TopNavigation from '../../components/Common/TopNavigation/TopNavigation';\nimport { ReactComponent as SendIcon } from '../../assets/send.svg';\nimport colors from '../../constants/colors';\nimport commonStyle from '../../constants/commonStyle';\nimport { useGlobalContext } from '../../contexts/GlobalContext';\nimport Main from '../../components/Common/Main/Main';\nimport Message from '../../components/Chat/Message';\nimport Date from '../../components/Chat/Date';\nimport * as ChatApi from '../../api/chat';\n\nlet stompClient = null;\nconst ChatRoom = () => {\n\tconst inputRef = useRef(null);\n\tconst [message, setMessage] = useState('');\n\tconst { state } = useLocation();\n\tconst [roomId, setRoomId] = useState(state.roomId);\n\tconst [receiverId, setReceiverId] = useState(state.receiverId);\n\t// todo: 유저정보 컨텍스트에서 가져와야함.\n\tconst [userId, setUserId] = useState('myId');\n\tconst [chats, setChats] = useState([]);\n\tconst navigate = useNavigate();\n\tconst sendChatHandler = () => {\n\t\tconsole.log('채팅전송개발중');\n\t\tif (stompClient) {\n\t\t\tconst chatMessage = {\n\t\t\t\tsenderId: userId,\n\t\t\t\treceiverId: receiverId,\n\t\t\t\troomId: roomId,\n\t\t\t\tmessage,\n\t\t\t};\n\t\t\tstompClient.send(`/app/chat/message`, {}, JSON.stringify(chatMessage));\n\t\t}\n\t\tsetMessage('');\n\t\tinputRef.current.focus();\n\t};\n\n\tconst onMessageReceived = payload => {\n\t\tlet payloadData = JSON.parse(payload.body);\n\t\tchats.push(payloadData);\n\t\tsetChats([...chats]);\n\t};\n\n\tconst onError = err => {\n\t\tconsole.log(err);\n\t\tthrow err;\n\t};\n\tconst onConnected = () => {\n\t\tconsole.log('연결완료');\n\t\tstompClient.subscribe(`/topic/chat/room/${roomId}`, onMessageReceived);\n\t};\n\n\tconst { setHasBottom } = useGlobalContext();\n\tuseEffect(() => {\n\t\tsetHasBottom(true);\n\t\treturn () => {\n\t\t\tsetHasBottom(false);\n\t\t};\n\t}, []);\n\n\t// roomId에 따라 채팅로그 받아오기\n\tuseEffect(() => {\n\t\tconst fetchChatLogs = async () => {\n\t\t\ttry {\n\t\t\t\tconst data = await ChatApi.getChagLogs(roomId);\n\t\t\t\tsetChats(data);\n\t\t\t} catch (err) {\n\t\t\t\tconsole.log(err);\n\t\t\t}\n\t\t};\n\t\tconst findRoom = async () => {\n\t\t\ttry {\n\t\t\t\tconst { roomId } = await ChatApi.findRoom(receiverId);\n\t\t\t\tsetRoomId(roomId);\n\t\t\t} catch (err) {\n\t\t\t\tconsole.log(err);\n\t\t\t}\n\t\t};\n\t\tif (roomId) {\n\t\t\tfetchChatLogs();\n\t\t} else {\n\t\t\tfindRoom();\n\t\t}\n\t}, [roomId]);\n\n\t// 소켓연결\n\tuseEffect(() => {\n\t\tlet Sock = new SockJS(process.env.REACT_APP_SOCKET_URI);\n\t\tstompClient = over(Sock);\n\t\tstompClient.connect({}, onConnected, onError);\n\n\t\treturn () => {\n\t\t\tif (stompClient.connected) stompClient.disconnect();\n\t\t};\n\t}, []);\n\treturn (\n\t\t<>\n\t\t\t<TopNavigation backClick onBackClick={() => navigate(-1)} centerContent={receiverId} />\n\t\t\t<Main>\n\t\t\t\t{/* todo : 날짜 달라질떄 Date 컴포넌트 렌더링 필요 */}\n\t\t\t\t{chats.map(chat => (\n\t\t\t\t\t<Message\n\t\t\t\t\t\tkey={uuid()}\n\t\t\t\t\t\tmessage={chat.message}\n\t\t\t\t\t\tisMine={chat.senderId === userId}\n\t\t\t\t\t\tsendTime={chat.sendTime}\n\t\t\t\t\t\tisRead={chat.isRead}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</Main>\n\t\t\t<div\n\t\t\t\tclassName=\"input-wrapper\"\n\t\t\t\tcss={css`\n\t\t\t\t\tposition: fixed;\n\t\t\t\t\tbottom: 0;\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\tmax-width: 1200px;\n\t\t\t\t\theight: ${commonStyle.bottomHeaderHeight};\n\t\t\t\t\tbox-shadow: 0 -0.2px ${colors.text};\n\t\t\t\t\tbackground-color: ${colors.white};\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\tjustify-content: center;\n\t\t\t\t\talign-items: center;\n\t\t\t\t`}\n\t\t\t>\n\t\t\t\t<input\n\t\t\t\t\tref={inputRef}\n\t\t\t\t\tvalue={message}\n\t\t\t\t\tonChange={e => setMessage(e.target.value)}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"메시지를 입력하세요\"\n\t\t\t\t\tcss={css`\n\t\t\t\t\t\twidth: 90%;\n\t\t\t\t\t\tpadding: 10px 45px 10px 10px;\n\t\t\t\t\t\tborder: 2px solid ${colors.text};\n\t\t\t\t\t\tfont-size: 16px;\n\t\t\t\t\t\tfont-family: 'Regular';\n\t\t\t\t\t\tborder-radius: 31px;\n\t\t\t\t\t\t&:active,\n\t\t\t\t\t\t&:focus {\n\t\t\t\t\t\t\toutline: none;\n\t\t\t\t\t\t}\n\t\t\t\t\t`}\n\t\t\t\t/>\n\t\t\t\t<div\n\t\t\t\t\tcss={css`\n\t\t\t\t\t\tposition: absolute;\n\t\t\t\t\t\tright: 5%;\n\t\t\t\t\t\tpadding: 10px;\n\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\tjustify-content: center;\n\t\t\t\t\t\talign-items: center;\n\t\t\t\t\t`}\n\t\t\t\t>\n\t\t\t\t\t<SendIcon onClick={sendChatHandler} width=\"28\" height=\"28\" fill={colors.text} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nexport default ChatRoom;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}