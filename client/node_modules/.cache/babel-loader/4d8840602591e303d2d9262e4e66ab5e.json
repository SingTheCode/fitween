{"ast":null,"code":"var _jsxFileName = \"/Users/singco/dev/projects/S07P12C104/client/src/pages/Chat/ChatList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\n/** @jsxImportSource @emotion/react */\n\nimport { css } from '@emotion/react';\nimport SockJS from 'sockjs-client';\nimport { over } from 'stompjs';\nimport TopNavigation from '../../components/Common/TopNavigation/TopNavigation';\nimport BottomNavigation from '../../components/Common/BottomNavigation/BottomNavigation';\nimport colors from '../../constants/colors';\nimport logo from '../../assets/logo2.png';\nimport Main from '../../components/Common/Main/Main';\nimport RoomItem from '../../components/Chat/RoomItem';\nimport { useNavigate } from 'react-router-dom';\nimport * as ChatApi from '../../api/chat';\nimport { useUserState } from '../../context/User/UserContext';\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"@emotion/react/jsx-dev-runtime\";\n\nconst EditButton = () => {\n  return _jsxDEV(\"button\", {\n    css: css`\n\t\t\t\tbackground-color: ${colors.background};\n\t\t\t\tcolor: ${colors.green100};\n\t\t\t\tborder: none;\n\t\t\t\tfont-size: 16px;\n\t\t\t\tfont-family: 'Bold';\n\t\t\t\tpadding: 20px 15px 0 10px;\n\t\t\t`,\n    children: \"Edit\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 3\n  }, this);\n};\n\n_c = EditButton;\nlet stompClient = null;\n\nconst ChatList = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const [chatList, setChatList] = useState(null);\n  const {\n    loginedUserId\n  } = useUserState();\n\n  const fetchAndSetChatList = async () => {\n    try {\n      const data = await ChatApi.getChatRoomLists(loginedUserId);\n      setChatList(data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const onMessageReceived = () => {\n    fetchAndSetChatList();\n  };\n\n  const onError = err => {\n    console.log(err);\n    throw err;\n  };\n\n  const onConnected = () => {\n    console.log('연결완료');\n    stompClient.debug = null;\n    stompClient.subscribe(`/topic/chat/wait/${loginedUserId}`, onMessageReceived);\n  };\n\n  useEffect(() => {\n    const fetch = async () => fetchAndSetChatList();\n\n    fetch();\n  }, []); // 소켓연결\n\n  useEffect(() => {\n    let Sock = new SockJS(process.env.REACT_APP_SOCKET_URI);\n    stompClient = over(Sock);\n    stompClient.connect({}, onConnected, onError);\n    return () => {\n      if (stompClient.connected) stompClient.disconnect();\n    };\n  }, []);\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(TopNavigation, {\n      centerContent: \"\\uCC44\\uD305\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 4\n    }, this), _jsxDEV(Main, {\n      children: chatList ? chatList.map(chatRoom => _jsxDEV(RoomItem, {\n        imgSrc: logo,\n        partnerName: chatRoom.user1Id === loginedUserId ? chatRoom.user2Nickname : chatRoom.user1Nickname,\n        message: chatRoom.lastChat,\n        unreadCnt: chatRoom.lastSenderId === loginedUserId ? 0 : chatRoom.notReadCount,\n        onClickHander: () => navigate('/chat/room', {\n          state: {\n            roomId: chatRoom.roomId,\n            receiverId: chatRoom.user1Id === loginedUserId ? chatRoom.user2Id : chatRoom.user1Id,\n            nickname: chatRoom.user1Id === loginedUserId ? chatRoom.user2Nickname : chatRoom.user1Nickname\n          }\n        })\n      }, chatRoom.roomId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }, this)) : _jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 4\n    }, this), _jsxDEV(BottomNavigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ChatList, \"MeWkyWM4V2L5J3veKf5LsAhL9+Y=\", false, function () {\n  return [useNavigate, useUserState];\n});\n\n_c2 = ChatList;\nexport default ChatList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EditButton\");\n$RefreshReg$(_c2, \"ChatList\");","map":{"version":3,"names":["React","useEffect","useState","css","SockJS","over","TopNavigation","BottomNavigation","colors","logo","Main","RoomItem","useNavigate","ChatApi","useUserState","EditButton","background","green100","stompClient","ChatList","navigate","chatList","setChatList","loginedUserId","fetchAndSetChatList","data","getChatRoomLists","err","console","log","onMessageReceived","onError","onConnected","debug","subscribe","fetch","Sock","process","env","REACT_APP_SOCKET_URI","connect","connected","disconnect","map","chatRoom","user1Id","user2Nickname","user1Nickname","lastChat","lastSenderId","notReadCount","state","roomId","receiverId","user2Id","nickname"],"sources":["/Users/singco/dev/projects/S07P12C104/client/src/pages/Chat/ChatList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport SockJS from 'sockjs-client';\nimport { over } from 'stompjs';\n\nimport TopNavigation from '../../components/Common/TopNavigation/TopNavigation';\nimport BottomNavigation from '../../components/Common/BottomNavigation/BottomNavigation';\nimport colors from '../../constants/colors';\nimport logo from '../../assets/logo2.png';\nimport Main from '../../components/Common/Main/Main';\nimport RoomItem from '../../components/Chat/RoomItem';\nimport { useNavigate } from 'react-router-dom';\nimport * as ChatApi from '../../api/chat';\nimport { useUserState } from '../../context/User/UserContext';\n\nconst EditButton = () => {\n\treturn (\n\t\t<button\n\t\t\tcss={css`\n\t\t\t\tbackground-color: ${colors.background};\n\t\t\t\tcolor: ${colors.green100};\n\t\t\t\tborder: none;\n\t\t\t\tfont-size: 16px;\n\t\t\t\tfont-family: 'Bold';\n\t\t\t\tpadding: 20px 15px 0 10px;\n\t\t\t`}\n\t\t>\n\t\t\tEdit\n\t\t</button>\n\t);\n};\n\nlet stompClient = null;\nconst ChatList = () => {\n\tconst navigate = useNavigate();\n\tconst [chatList, setChatList] = useState(null);\n\n\tconst { loginedUserId } = useUserState();\n\tconst fetchAndSetChatList = async () => {\n\t\ttry {\n\t\t\tconst data = await ChatApi.getChatRoomLists(loginedUserId);\n\t\t\tsetChatList(data);\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t};\n\n\tconst onMessageReceived = () => {\n\t\tfetchAndSetChatList();\n\t};\n\n\tconst onError = err => {\n\t\tconsole.log(err);\n\t\tthrow err;\n\t};\n\tconst onConnected = () => {\n\t\tconsole.log('연결완료');\n\t\tstompClient.debug = null;\n\t\tstompClient.subscribe(`/topic/chat/wait/${loginedUserId}`, onMessageReceived);\n\t};\n\n\tuseEffect(() => {\n\t\tconst fetch = async () => fetchAndSetChatList();\n\t\tfetch();\n\t}, []);\n\t// 소켓연결\n\tuseEffect(() => {\n\t\tlet Sock = new SockJS(process.env.REACT_APP_SOCKET_URI);\n\t\tstompClient = over(Sock);\n\t\tstompClient.connect({}, onConnected, onError);\n\n\t\treturn () => {\n\t\t\tif (stompClient.connected) stompClient.disconnect();\n\t\t};\n\t}, []);\n\treturn (\n\t\t<>\n\t\t\t<TopNavigation centerContent=\"채팅\" />\n\t\t\t<Main>\n\t\t\t\t{chatList ? (\n\t\t\t\t\tchatList.map(chatRoom => (\n\t\t\t\t\t\t<RoomItem\n\t\t\t\t\t\t\tkey={chatRoom.roomId}\n\t\t\t\t\t\t\timgSrc={logo}\n\t\t\t\t\t\t\tpartnerName={\n\t\t\t\t\t\t\t\tchatRoom.user1Id === loginedUserId ? chatRoom.user2Nickname : chatRoom.user1Nickname\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tmessage={chatRoom.lastChat}\n\t\t\t\t\t\t\tunreadCnt={chatRoom.lastSenderId === loginedUserId ? 0 : chatRoom.notReadCount}\n\t\t\t\t\t\t\tonClickHander={() =>\n\t\t\t\t\t\t\t\tnavigate('/chat/room', {\n\t\t\t\t\t\t\t\t\tstate: {\n\t\t\t\t\t\t\t\t\t\troomId: chatRoom.roomId,\n\t\t\t\t\t\t\t\t\t\treceiverId:\n\t\t\t\t\t\t\t\t\t\t\tchatRoom.user1Id === loginedUserId ? chatRoom.user2Id : chatRoom.user1Id,\n\t\t\t\t\t\t\t\t\t\tnickname:\n\t\t\t\t\t\t\t\t\t\t\tchatRoom.user1Id === loginedUserId\n\t\t\t\t\t\t\t\t\t\t\t\t? chatRoom.user2Nickname\n\t\t\t\t\t\t\t\t\t\t\t\t: chatRoom.user1Nickname,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))\n\t\t\t\t) : (\n\t\t\t\t\t<div />\n\t\t\t\t)}\n\t\t\t</Main>\n\t\t\t<BottomNavigation />\n\t\t</>\n\t);\n};\n\nexport default ChatList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}