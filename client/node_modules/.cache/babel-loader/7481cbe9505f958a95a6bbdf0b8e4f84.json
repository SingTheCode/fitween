{"ast":null,"code":"import { rest } from 'msw'; // article 리스트\n\nexport const getArticleList = rest.get('http://localhost:5000/article/list', async (req, res, ctx) => res(ctx.json([{\n  articleId: 'id1',\n  articleTitle: '제목입니다',\n  articleImg: '/img/asdasf',\n  articlePrice: 3000,\n  articleLend: 1,\n  articleLastUpdateTime: '2022-07-21',\n  articleLikeCount: 144\n}, {\n  articleId: 'id2',\n  articleTitle: '2번쨰 제목입니다',\n  articleImg: '/img/asdasf',\n  articlePrice: 4000,\n  articleLend: 1,\n  articleLastUpdateTime: '2022-07-21',\n  articleLikeCount: 144\n}]))); // article 상세\n\nexport const getArticle = rest.get('http://localhost:5000/article/:articleId', async (req, res, ctx) => res(ctx.json([{\n  articleId: 'id1',\n  articleTitle: '제목입니다',\n  articleImgList: ['/img/asdasf', '/img/asdasf'],\n  articleContent: '네고 사절',\n  articlePrice: 3000,\n  articleLend: 1,\n  articleLastUpdateTime: '2022-07-21 14:23:07',\n  articleLikeCount: 144\n}, {\n  articleId: 'id2',\n  articleTitle: '2번쨰 제목입니다',\n  articleImgList: ['/img/asdasf', '/img/asdasf'],\n  articleContent: '네고 환영',\n  articlePrice: 4000,\n  articleLend: 1,\n  articleLastUpdateTime: '2022-07-21 14:23:07',\n  articleLikeCount: 144\n}]))); // article등록\n\nexport const createAricle = rest.post('http://localhost:5000/article/regist', async (req, res, ctx) => res(ctx.json({\n  result: 'success'\n}))); // article수정\n\nexport const updateArticle = rest.put('http://localhost:5000/article/:articleId', async (req, res, ctx) => res(ctx.json({\n  result: 'success'\n}))); // article삭제\n\nexport const deleteArticle = rest.delete('http://localhost:5000/article/:articleId', async (req, res, ctx) => res(ctx.json({\n  result: 'success'\n}))); // 찜한 피드\n\nexport const getLikeList = rest.get('http://localhost:5000/article/likelist', async (req, res, ctx) => res(ctx.json([{\n  articleId: 'id1',\n  articleTitle: '제목입니다',\n  articleImg: '/img/asdasf',\n  articlePrice: 3000,\n  articleLend: 1,\n  articleLastUpdateTime: '2022-07-21',\n  articleLikeCount: 144\n}, {\n  articleId: 'id2',\n  articleTitle: '2번쨰 제목입니다',\n  articleImg: '/img/asdasf',\n  articlePrice: 4000,\n  articleLend: 1,\n  articleLastUpdateTime: '2022-07-21',\n  articleLikeCount: 144\n}]))); // article 좋아요/취소\n\nexport const likeArticle = rest.post('http://localhost:5000/article/like/:articleId', async (req, res, ctx) => res(ctx.json({\n  result: 'success'\n}))); // article 대여 가능/불가능 수정\n\nexport const updateAvailable = rest.post('http://localhost:5000/article/available/:articleId', async (req, res, ctx) => res(ctx.json({\n  result: 'success'\n})));","map":{"version":3,"names":["rest","getArticleList","get","req","res","ctx","json","articleId","articleTitle","articleImg","articlePrice","articleLend","articleLastUpdateTime","articleLikeCount","getArticle","articleImgList","articleContent","createAricle","post","result","updateArticle","put","deleteArticle","delete","getLikeList","likeArticle","updateAvailable"],"sources":["/Users/singco/dev/projects/S07P12C104/client/src/mocks/handlers/article.js"],"sourcesContent":["import { rest } from 'msw';\n\n// article 리스트\nexport const getArticleList = rest.get(\n\t'http://localhost:5000/article/list',\n\tasync (req, res, ctx) =>\n\t\tres(\n\t\t\tctx.json([\n\t\t\t\t{\n\t\t\t\t\tarticleId: 'id1',\n\t\t\t\t\tarticleTitle: '제목입니다',\n\t\t\t\t\tarticleImg: '/img/asdasf',\n\t\t\t\t\tarticlePrice: 3000,\n\t\t\t\t\tarticleLend: 1,\n\t\t\t\t\tarticleLastUpdateTime: '2022-07-21',\n\t\t\t\t\tarticleLikeCount: 144,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tarticleId: 'id2',\n\t\t\t\t\tarticleTitle: '2번쨰 제목입니다',\n\t\t\t\t\tarticleImg: '/img/asdasf',\n\t\t\t\t\tarticlePrice: 4000,\n\t\t\t\t\tarticleLend: 1,\n\t\t\t\t\tarticleLastUpdateTime: '2022-07-21',\n\t\t\t\t\tarticleLikeCount: 144,\n\t\t\t\t},\n\t\t\t]),\n\t\t),\n);\n\n// article 상세\nexport const getArticle = rest.get(\n\t'http://localhost:5000/article/:articleId',\n\tasync (req, res, ctx) =>\n\t\tres(\n\t\t\tctx.json([\n\t\t\t\t{\n\t\t\t\t\tarticleId: 'id1',\n\t\t\t\t\tarticleTitle: '제목입니다',\n\t\t\t\t\tarticleImgList: ['/img/asdasf', '/img/asdasf'],\n\t\t\t\t\tarticleContent: '네고 사절',\n\t\t\t\t\tarticlePrice: 3000,\n\t\t\t\t\tarticleLend: 1,\n\t\t\t\t\tarticleLastUpdateTime: '2022-07-21 14:23:07',\n\t\t\t\t\tarticleLikeCount: 144,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tarticleId: 'id2',\n\t\t\t\t\tarticleTitle: '2번쨰 제목입니다',\n\t\t\t\t\tarticleImgList: ['/img/asdasf', '/img/asdasf'],\n\t\t\t\t\tarticleContent: '네고 환영',\n\t\t\t\t\tarticlePrice: 4000,\n\t\t\t\t\tarticleLend: 1,\n\t\t\t\t\tarticleLastUpdateTime: '2022-07-21 14:23:07',\n\t\t\t\t\tarticleLikeCount: 144,\n\t\t\t\t},\n\t\t\t]),\n\t\t),\n);\n\n// article등록\nexport const createAricle = rest.post(\n\t'http://localhost:5000/article/regist',\n\tasync (req, res, ctx) => res(ctx.json({ result: 'success' })),\n);\n\n// article수정\nexport const updateArticle = rest.put(\n\t'http://localhost:5000/article/:articleId',\n\tasync (req, res, ctx) => res(ctx.json({ result: 'success' })),\n);\n\n// article삭제\nexport const deleteArticle = rest.delete(\n\t'http://localhost:5000/article/:articleId',\n\tasync (req, res, ctx) => res(ctx.json({ result: 'success' })),\n);\n\n// 찜한 피드\nexport const getLikeList = rest.get(\n\t'http://localhost:5000/article/likelist',\n\tasync (req, res, ctx) =>\n\t\tres(\n\t\t\tctx.json([\n\t\t\t\t{\n\t\t\t\t\tarticleId: 'id1',\n\t\t\t\t\tarticleTitle: '제목입니다',\n\t\t\t\t\tarticleImg: '/img/asdasf',\n\t\t\t\t\tarticlePrice: 3000,\n\t\t\t\t\tarticleLend: 1,\n\t\t\t\t\tarticleLastUpdateTime: '2022-07-21',\n\t\t\t\t\tarticleLikeCount: 144,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tarticleId: 'id2',\n\t\t\t\t\tarticleTitle: '2번쨰 제목입니다',\n\t\t\t\t\tarticleImg: '/img/asdasf',\n\t\t\t\t\tarticlePrice: 4000,\n\t\t\t\t\tarticleLend: 1,\n\t\t\t\t\tarticleLastUpdateTime: '2022-07-21',\n\t\t\t\t\tarticleLikeCount: 144,\n\t\t\t\t},\n\t\t\t]),\n\t\t),\n);\n\n// article 좋아요/취소\nexport const likeArticle = rest.post(\n\t'http://localhost:5000/article/like/:articleId',\n\tasync (req, res, ctx) => res(ctx.json({ result: 'success' })),\n);\n\n// article 대여 가능/불가능 수정\nexport const updateAvailable = rest.post(\n\t'http://localhost:5000/article/available/:articleId',\n\tasync (req, res, ctx) => res(ctx.json({ result: 'success' })),\n);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}