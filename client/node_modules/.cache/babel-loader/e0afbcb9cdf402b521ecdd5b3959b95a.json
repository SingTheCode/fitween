{"ast":null,"code":"import * as authApi from '../../api/auth';\nexport const checkSpecial = str => {\n  const regExp = /[!?@#$%^&*():;+-=~{}<>\\_\\[\\]\\|\\\\\\\"\\'\\,\\.\\/\\`\\₩]/g;\n  if (regExp.test(str)) return true;\n  return false;\n};\nexport const checkNum = str => {\n  const regExp = /[0-9]/g;\n  if (regExp.test(str)) return true;\n  return false;\n};\nexport const checkEmoji = str => {\n  const regExp = /([\\u2700-\\u27BF]|[\\uE000-\\uF8FF]|\\uD83C[\\uDC00-\\uDFFF]|\\uD83D[\\uDC00-\\uDFFF]|[\\u2011-\\u26FF]|\\uD83E[\\uDD10-\\uDDFF])/g;\n  if (regExp.test(str)) return true;\n  return false;\n};\nexport const checkSpace = str => {\n  if (str.search(/\\s/) !== -1) return true;\n  return false;\n};\nexport const checkLength = str => {\n  if (str.length < 2 || str.length > 8) return true;\n  return false;\n};\nexport const checkDuplicationNickName = async nickname => {\n  const {\n    isSuccess\n  } = await authApi.duplicationCheck(nickname);\n  return isSuccess;\n};\nexport const validateNickName = nickName => {\n  if (checkSpecial(nickName) || checkSpace(nickName) || checkNum(nickName) || checkEmoji(nickName)) return {\n    state: false,\n    type: 'notLengthErr'\n  };\n  if (checkLength(nickName)) return {\n    state: false,\n    type: 'lengthErr'\n  };\n  return {\n    state: true\n  };\n};\nexport const validateHeight = height => {\n  if (height >= 90 && height <= 250) return true;\n  return false;\n};\nexport const validateWeight = weight => {\n  if (weight >= 30 && weight <= 200) return true;\n  return false;\n};\nexport const validateFootSize = footSize => {\n  if (footSize >= 0 && footSize <= 350) return true;\n  return false;\n};\nexport const validateAllInput = async info => {\n  const temp = await checkDuplicationNickName(info.nickname);\n  return temp && validateNickName(info.nickname) && validateHeight(info.height) && validateWeight(info.weight) && validateFootSize(info.footSize) ? true : false;\n};","map":{"version":3,"names":["authApi","checkSpecial","str","regExp","test","checkNum","checkEmoji","checkSpace","search","checkLength","length","checkDuplicationNickName","nickname","isSuccess","duplicationCheck","validateNickName","nickName","state","type","validateHeight","height","validateWeight","weight","validateFootSize","footSize","validateAllInput","info","temp"],"sources":["/Users/singco/dev/projects/S07P12C104/client/src/utils/validate.js"],"sourcesContent":["import * as authApi from '../../api/auth';\n\nexport const checkSpecial = str => {\n\tconst regExp = /[!?@#$%^&*():;+-=~{}<>\\_\\[\\]\\|\\\\\\\"\\'\\,\\.\\/\\`\\₩]/g;\n\tif (regExp.test(str)) return true;\n\treturn false;\n};\n\nexport const checkNum = str => {\n\tconst regExp = /[0-9]/g;\n\tif (regExp.test(str)) return true;\n\treturn false;\n};\n\nexport const checkEmoji = str => {\n\tconst regExp =\n\t\t/([\\u2700-\\u27BF]|[\\uE000-\\uF8FF]|\\uD83C[\\uDC00-\\uDFFF]|\\uD83D[\\uDC00-\\uDFFF]|[\\u2011-\\u26FF]|\\uD83E[\\uDD10-\\uDDFF])/g;\n\tif (regExp.test(str)) return true;\n\treturn false;\n};\n\nexport const checkSpace = str => {\n\tif (str.search(/\\s/) !== -1) return true;\n\treturn false;\n};\n\nexport const checkLength = str => {\n\tif (str.length < 2 || str.length > 8) return true;\n\treturn false;\n};\n\nexport const checkDuplicationNickName = async nickname => {\n\tconst { isSuccess } = await authApi.duplicationCheck(nickname);\n\treturn isSuccess;\n};\n\nexport const validateNickName = nickName => {\n\tif (checkSpecial(nickName) || checkSpace(nickName) || checkNum(nickName) || checkEmoji(nickName))\n\t\treturn { state: false, type: 'notLengthErr' };\n\tif (checkLength(nickName)) return { state: false, type: 'lengthErr' };\n\treturn { state: true };\n};\n\nexport const validateHeight = height => {\n\tif (height >= 90 && height <= 250) return true;\n\treturn false;\n};\n\nexport const validateWeight = weight => {\n\tif (weight >= 30 && weight <= 200) return true;\n\treturn false;\n};\n\nexport const validateFootSize = footSize => {\n\tif (footSize >= 0 && footSize <= 350) return true;\n\treturn false;\n};\n\nexport const validateAllInput = async info => {\n\tconst temp = await checkDuplicationNickName(info.nickname);\n\treturn temp &&\n\t\tvalidateNickName(info.nickname) &&\n\t\tvalidateHeight(info.height) &&\n\t\tvalidateWeight(info.weight) &&\n\t\tvalidateFootSize(info.footSize)\n\t\t? true\n\t\t: false;\n};\n"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,gBAAzB;AAEA,OAAO,MAAMC,YAAY,GAAGC,GAAG,IAAI;EAClC,MAAMC,MAAM,GAAG,kDAAf;EACA,IAAIA,MAAM,CAACC,IAAP,CAAYF,GAAZ,CAAJ,EAAsB,OAAO,IAAP;EACtB,OAAO,KAAP;AACA,CAJM;AAMP,OAAO,MAAMG,QAAQ,GAAGH,GAAG,IAAI;EAC9B,MAAMC,MAAM,GAAG,QAAf;EACA,IAAIA,MAAM,CAACC,IAAP,CAAYF,GAAZ,CAAJ,EAAsB,OAAO,IAAP;EACtB,OAAO,KAAP;AACA,CAJM;AAMP,OAAO,MAAMI,UAAU,GAAGJ,GAAG,IAAI;EAChC,MAAMC,MAAM,GACX,sHADD;EAEA,IAAIA,MAAM,CAACC,IAAP,CAAYF,GAAZ,CAAJ,EAAsB,OAAO,IAAP;EACtB,OAAO,KAAP;AACA,CALM;AAOP,OAAO,MAAMK,UAAU,GAAGL,GAAG,IAAI;EAChC,IAAIA,GAAG,CAACM,MAAJ,CAAW,IAAX,MAAqB,CAAC,CAA1B,EAA6B,OAAO,IAAP;EAC7B,OAAO,KAAP;AACA,CAHM;AAKP,OAAO,MAAMC,WAAW,GAAGP,GAAG,IAAI;EACjC,IAAIA,GAAG,CAACQ,MAAJ,GAAa,CAAb,IAAkBR,GAAG,CAACQ,MAAJ,GAAa,CAAnC,EAAsC,OAAO,IAAP;EACtC,OAAO,KAAP;AACA,CAHM;AAKP,OAAO,MAAMC,wBAAwB,GAAG,MAAMC,QAAN,IAAkB;EACzD,MAAM;IAAEC;EAAF,IAAgB,MAAMb,OAAO,CAACc,gBAAR,CAAyBF,QAAzB,CAA5B;EACA,OAAOC,SAAP;AACA,CAHM;AAKP,OAAO,MAAME,gBAAgB,GAAGC,QAAQ,IAAI;EAC3C,IAAIf,YAAY,CAACe,QAAD,CAAZ,IAA0BT,UAAU,CAACS,QAAD,CAApC,IAAkDX,QAAQ,CAACW,QAAD,CAA1D,IAAwEV,UAAU,CAACU,QAAD,CAAtF,EACC,OAAO;IAAEC,KAAK,EAAE,KAAT;IAAgBC,IAAI,EAAE;EAAtB,CAAP;EACD,IAAIT,WAAW,CAACO,QAAD,CAAf,EAA2B,OAAO;IAAEC,KAAK,EAAE,KAAT;IAAgBC,IAAI,EAAE;EAAtB,CAAP;EAC3B,OAAO;IAAED,KAAK,EAAE;EAAT,CAAP;AACA,CALM;AAOP,OAAO,MAAME,cAAc,GAAGC,MAAM,IAAI;EACvC,IAAIA,MAAM,IAAI,EAAV,IAAgBA,MAAM,IAAI,GAA9B,EAAmC,OAAO,IAAP;EACnC,OAAO,KAAP;AACA,CAHM;AAKP,OAAO,MAAMC,cAAc,GAAGC,MAAM,IAAI;EACvC,IAAIA,MAAM,IAAI,EAAV,IAAgBA,MAAM,IAAI,GAA9B,EAAmC,OAAO,IAAP;EACnC,OAAO,KAAP;AACA,CAHM;AAKP,OAAO,MAAMC,gBAAgB,GAAGC,QAAQ,IAAI;EAC3C,IAAIA,QAAQ,IAAI,CAAZ,IAAiBA,QAAQ,IAAI,GAAjC,EAAsC,OAAO,IAAP;EACtC,OAAO,KAAP;AACA,CAHM;AAKP,OAAO,MAAMC,gBAAgB,GAAG,MAAMC,IAAN,IAAc;EAC7C,MAAMC,IAAI,GAAG,MAAMhB,wBAAwB,CAACe,IAAI,CAACd,QAAN,CAA3C;EACA,OAAOe,IAAI,IACVZ,gBAAgB,CAACW,IAAI,CAACd,QAAN,CADV,IAENO,cAAc,CAACO,IAAI,CAACN,MAAN,CAFR,IAGNC,cAAc,CAACK,IAAI,CAACJ,MAAN,CAHR,IAINC,gBAAgB,CAACG,IAAI,CAACF,QAAN,CAJV,GAKJ,IALI,GAMJ,KANH;AAOA,CATM"},"metadata":{},"sourceType":"module"}