{"ast":null,"code":"var _jsxFileName = \"/Users/singco/dev/projects/S07P12C104/client/src/pages/Index/Redirect.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useNavigate, useSearchParams, useLocation } from 'react-router-dom';\nimport Loading from '../../components/Common/Loading/Loading';\nimport * as authApi from '../../api/auth';\nimport { useUserDispatch } from '../../contexts/User/UserContext';\nimport { setLogin, setSignUp } from '../../contexts/User/UserTypes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Redirect = () => {\n  _s();\n\n  const [searchParams] = useSearchParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const kakaoToken = searchParams.get('code');\n  const googleToken = new URLSearchParams(location.hash).get('id_token');\n  const dispatch = useUserDispatch();\n  useEffect(() => {\n    const login = async () => {\n      if (!kakaoToken && !googleToken) {\n        alert('로그인에 실패했습니다');\n        navigate('/');\n      }\n\n      let body = {};\n\n      if (kakaoToken) {\n        body = {\n          loginType: 'Kakao',\n          authCode: kakaoToken\n        };\n      } else if (googleToken) {\n        body = {\n          loginType: 'Google',\n          authCode: googleToken\n        };\n      }\n\n      try {\n        const res = await authApi.login(body);\n\n        if (res.responseType === 'signIn') {\n          const {\n            refreshToken,\n            accessToken,\n            userId\n          } = res;\n          dispatch(setLogin(userId));\n          navigate('/main');\n        } else if (res.responseType === 'signUp') {\n          const {\n            userId\n          } = res;\n          dispatch(setSignUp(userId));\n          navigate('/join/index');\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    login();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"\\uB85C\\uB529\\uC911\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Redirect, \"bSgsDUbpltVqLMcxfi+NP3uadhw=\", false, function () {\n  return [useSearchParams, useLocation, useNavigate, useUserDispatch];\n});\n\n_c = Redirect;\nexport default Redirect;\n\nvar _c;\n\n$RefreshReg$(_c, \"Redirect\");","map":{"version":3,"names":["React","useEffect","useNavigate","useSearchParams","useLocation","Loading","authApi","useUserDispatch","setLogin","setSignUp","Redirect","searchParams","location","navigate","kakaoToken","get","googleToken","URLSearchParams","hash","dispatch","login","alert","body","loginType","authCode","res","responseType","refreshToken","accessToken","userId","err","console","log"],"sources":["/Users/singco/dev/projects/S07P12C104/client/src/pages/Index/Redirect.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useNavigate, useSearchParams, useLocation } from 'react-router-dom';\n\nimport Loading from '../../components/Common/Loading/Loading';\nimport * as authApi from '../../api/auth';\nimport { useUserDispatch } from '../../contexts/User/UserContext';\nimport { setLogin, setSignUp } from '../../contexts/User/UserTypes';\n\nconst Redirect = () => {\n\tconst [searchParams] = useSearchParams();\n\tconst location = useLocation();\n\tconst navigate = useNavigate();\n\tconst kakaoToken = searchParams.get('code');\n\tconst googleToken = new URLSearchParams(location.hash).get('id_token');\n\tconst dispatch = useUserDispatch();\n\n\tuseEffect(() => {\n\t\tconst login = async () => {\n\t\t\tif (!kakaoToken && !googleToken) {\n\t\t\t\talert('로그인에 실패했습니다');\n\t\t\t\tnavigate('/');\n\t\t\t}\n\t\t\tlet body = {};\n\t\t\tif (kakaoToken) {\n\t\t\t\tbody = {\n\t\t\t\t\tloginType: 'Kakao',\n\t\t\t\t\tauthCode: kakaoToken,\n\t\t\t\t};\n\t\t\t} else if (googleToken) {\n\t\t\t\tbody = {\n\t\t\t\t\tloginType: 'Google',\n\t\t\t\t\tauthCode: googleToken,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tconst res = await authApi.login(body);\n\t\t\t\tif (res.responseType === 'signIn') {\n\t\t\t\t\tconst { refreshToken, accessToken, userId } = res;\n\n\t\t\t\t\n\t\t\t\t\tdispatch(setLogin(userId));\n\t\t\t\t\tnavigate('/main');\n\t\t\t\t} else if (res.responseType === 'signUp') {\n\t\t\t\t\tconst { userId } = res;\n\n\t\t\t\t\tdispatch(setSignUp(userId));\n\t\t\t\t\tnavigate('/join/index');\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\tconsole.log(err);\n\t\t\t}\n\t\t};\n\t\tlogin();\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<Loading />\n\t\t\t<span>로딩중</span>\n\t\t</>\n\t);\n};\nexport default Redirect;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,WAAvC,QAA0D,kBAA1D;AAEA,OAAOC,OAAP,MAAoB,yCAApB;AACA,OAAO,KAAKC,OAAZ,MAAyB,gBAAzB;AACA,SAASC,eAAT,QAAgC,iCAAhC;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,+BAApC;;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACtB,MAAM,CAACC,YAAD,IAAiBR,eAAe,EAAtC;EACA,MAAMS,QAAQ,GAAGR,WAAW,EAA5B;EACA,MAAMS,QAAQ,GAAGX,WAAW,EAA5B;EACA,MAAMY,UAAU,GAAGH,YAAY,CAACI,GAAb,CAAiB,MAAjB,CAAnB;EACA,MAAMC,WAAW,GAAG,IAAIC,eAAJ,CAAoBL,QAAQ,CAACM,IAA7B,EAAmCH,GAAnC,CAAuC,UAAvC,CAApB;EACA,MAAMI,QAAQ,GAAGZ,eAAe,EAAhC;EAEAN,SAAS,CAAC,MAAM;IACf,MAAMmB,KAAK,GAAG,YAAY;MACzB,IAAI,CAACN,UAAD,IAAe,CAACE,WAApB,EAAiC;QAChCK,KAAK,CAAC,aAAD,CAAL;QACAR,QAAQ,CAAC,GAAD,CAAR;MACA;;MACD,IAAIS,IAAI,GAAG,EAAX;;MACA,IAAIR,UAAJ,EAAgB;QACfQ,IAAI,GAAG;UACNC,SAAS,EAAE,OADL;UAENC,QAAQ,EAAEV;QAFJ,CAAP;MAIA,CALD,MAKO,IAAIE,WAAJ,EAAiB;QACvBM,IAAI,GAAG;UACNC,SAAS,EAAE,QADL;UAENC,QAAQ,EAAER;QAFJ,CAAP;MAIA;;MAED,IAAI;QACH,MAAMS,GAAG,GAAG,MAAMnB,OAAO,CAACc,KAAR,CAAcE,IAAd,CAAlB;;QACA,IAAIG,GAAG,CAACC,YAAJ,KAAqB,QAAzB,EAAmC;UAClC,MAAM;YAAEC,YAAF;YAAgBC,WAAhB;YAA6BC;UAA7B,IAAwCJ,GAA9C;UAGAN,QAAQ,CAACX,QAAQ,CAACqB,MAAD,CAAT,CAAR;UACAhB,QAAQ,CAAC,OAAD,CAAR;QACA,CAND,MAMO,IAAIY,GAAG,CAACC,YAAJ,KAAqB,QAAzB,EAAmC;UACzC,MAAM;YAAEG;UAAF,IAAaJ,GAAnB;UAEAN,QAAQ,CAACV,SAAS,CAACoB,MAAD,CAAV,CAAR;UACAhB,QAAQ,CAAC,aAAD,CAAR;QACA;MACD,CAdD,CAcE,OAAOiB,GAAP,EAAY;QACbC,OAAO,CAACC,GAAR,CAAYF,GAAZ;MACA;IACD,CAnCD;;IAoCAV,KAAK;EACL,CAtCQ,EAsCN,EAtCM,CAAT;EAwCA,oBACC;IAAA,wBACC,QAAC,OAAD;MAAA;MAAA;MAAA;IAAA,QADD,eAEC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFD;EAAA,gBADD;AAMA,CAtDD;;GAAMV,Q;UACkBP,e,EACNC,W,EACAF,W,EAGAK,e;;;KANZG,Q;AAuDN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}