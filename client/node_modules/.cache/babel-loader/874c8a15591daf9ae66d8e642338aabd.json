{"ast":null,"code":"var _jsxFileName = \"/Users/singco/dev/projects/S07P12C104/client/src/pages/Chat/ChatList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\n/** @jsxImportSource @emotion/react */\n\nimport { css } from '@emotion/react';\nimport SockJS from 'sockjs-client';\nimport { over } from 'stompjs';\nimport TopNavigation from '../../components/Common/TopNavigation/TopNavigation';\nimport BottomNavigation from '../../components/Common/BottomNavigation/BottomNavigation';\nimport colors from '../../constants/colors';\nimport logo from '../../assets/logo2.png';\nimport Main from '../../components/Common/Main/Main';\nimport RoomItem from '../../components/Chat/RoomItem';\nimport { useNavigate } from 'react-router-dom';\nimport * as ChatApi from '../../api/chat';\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"@emotion/react/jsx-dev-runtime\";\n\nconst EditButton = () => {\n  return _jsxDEV(\"button\", {\n    css: css`\n\t\t\t\tbackground-color: ${colors.background};\n\t\t\t\tcolor: ${colors.green100};\n\t\t\t\tborder: none;\n\t\t\t\tfont-size: 16px;\n\t\t\t\tfont-family: 'Bold';\n\t\t\t\tpadding: 20px 15px 0 10px;\n\t\t\t`,\n    children: \"Edit\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 3\n  }, this);\n};\n\n_c = EditButton;\nlet stompClient = null;\n\nconst ChatList = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const [chatList, setChatList] = useState(null); // todo: 유저정보 가져와야함\n\n  const [userId, setUserId] = useState('testId');\n\n  const fetchAndSetChatList = async () => {\n    try {\n      const data = await ChatApi.getChatRoomLists();\n      setChatList(data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const onMessageReceived = payload => {\n    let payloadData = JSON.parse(payload.body);\n    console.log(payloadData);\n    fetchAndSetChatList();\n  };\n\n  const onError = err => {\n    console.log(err);\n    throw err;\n  };\n\n  const onConnected = () => {\n    console.log('연결완료');\n    stompClient.subscribe(`/topic/chat/wait/${userId}`, onMessageReceived);\n  };\n\n  useEffect(() => {\n    const fetch = async () => fetchAndSetChatList();\n\n    fetch();\n  }, []); // 소켓연결\n\n  useEffect(() => {\n    let Sock = new SockJS(process.env.REACT_APP_SOCKET_URI);\n    stompClient = over(Sock);\n    stompClient.connect({}, onConnected, onError);\n    return () => {\n      if (stompClient.connected) stompClient.disconnect();\n    };\n  }, []);\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(TopNavigation, {\n      centerContent: \"\\uCC44\\uD305\",\n      rightMenu: _jsxDEV(EditButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 49\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 4\n    }, this), _jsxDEV(Main, {\n      children: chatList ? chatList.map(chatRoom => _jsxDEV(RoomItem, {\n        // todo : img 받아서 구현 필요\n        imgSrc: logo,\n        partnerName: chatRoom.partnerName,\n        message: chatRoom.lastMessage,\n        unreadCnt: chatRoom.unreadMsgCnt,\n        onClickHander: () => navigate('/chat/room', {\n          state: {\n            roomId: chatRoom.roomId,\n            receiverId: chatRoom.partnerId\n          }\n        })\n      }, chatRoom.roomId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }, this)) : // todo : 로딩컴퍼넌트로 넘겨주자\n      _jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 4\n    }, this), _jsxDEV(BottomNavigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ChatList, \"Q+F0n7K5eeupz+bX5Gcu+XWRl/4=\", false, function () {\n  return [useNavigate];\n});\n\n_c2 = ChatList;\nexport default ChatList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EditButton\");\n$RefreshReg$(_c2, \"ChatList\");","map":{"version":3,"names":["React","useEffect","useState","css","SockJS","over","TopNavigation","BottomNavigation","colors","logo","Main","RoomItem","useNavigate","ChatApi","EditButton","background","green100","stompClient","ChatList","navigate","chatList","setChatList","userId","setUserId","fetchAndSetChatList","data","getChatRoomLists","err","console","log","onMessageReceived","payload","payloadData","JSON","parse","body","onError","onConnected","subscribe","fetch","Sock","process","env","REACT_APP_SOCKET_URI","connect","connected","disconnect","map","chatRoom","partnerName","lastMessage","unreadMsgCnt","state","roomId","receiverId","partnerId"],"sources":["/Users/singco/dev/projects/S07P12C104/client/src/pages/Chat/ChatList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport SockJS from 'sockjs-client';\nimport { over } from 'stompjs';\n\nimport TopNavigation from '../../components/Common/TopNavigation/TopNavigation';\nimport BottomNavigation from '../../components/Common/BottomNavigation/BottomNavigation';\nimport colors from '../../constants/colors';\nimport logo from '../../assets/logo2.png';\nimport Main from '../../components/Common/Main/Main';\nimport RoomItem from '../../components/Chat/RoomItem';\nimport { useNavigate } from 'react-router-dom';\nimport * as ChatApi from '../../api/chat';\n\nconst EditButton = () => {\n\treturn (\n\t\t<button\n\t\t\tcss={css`\n\t\t\t\tbackground-color: ${colors.background};\n\t\t\t\tcolor: ${colors.green100};\n\t\t\t\tborder: none;\n\t\t\t\tfont-size: 16px;\n\t\t\t\tfont-family: 'Bold';\n\t\t\t\tpadding: 20px 15px 0 10px;\n\t\t\t`}\n\t\t>\n\t\t\tEdit\n\t\t</button>\n\t);\n};\n\nlet stompClient = null;\nconst ChatList = () => {\n\tconst navigate = useNavigate();\n\tconst [chatList, setChatList] = useState(null);\n\n\t// todo: 유저정보 가져와야함\n\tconst [userId, setUserId] = useState('testId');\n\tconst fetchAndSetChatList = async () => {\n\t\ttry {\n\t\t\tconst data = await ChatApi.getChatRoomLists();\n\t\t\tsetChatList(data);\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t};\n\n\tconst onMessageReceived = payload => {\n\t\tlet payloadData = JSON.parse(payload.body);\n\t\tconsole.log(payloadData);\n\t\tfetchAndSetChatList();\n\t};\n\n\tconst onError = err => {\n\t\tconsole.log(err);\n\t\tthrow err;\n\t};\n\tconst onConnected = () => {\n\t\tconsole.log('연결완료');\n\t\tstompClient.subscribe(`/topic/chat/wait/${userId}`, onMessageReceived);\n\t};\n\n\tuseEffect(() => {\n\t\tconst fetch = async () => fetchAndSetChatList();\n\t\tfetch();\n\t}, []);\n\t// 소켓연결\n\tuseEffect(() => {\n\t\tlet Sock = new SockJS(process.env.REACT_APP_SOCKET_URI);\n\t\tstompClient = over(Sock);\n\t\tstompClient.connect({}, onConnected, onError);\n\n\t\treturn () => {\n\t\t\tif (stompClient.connected) stompClient.disconnect();\n\t\t};\n\t}, []);\n\treturn (\n\t\t<>\n\t\t\t<TopNavigation centerContent=\"채팅\" rightMenu={<EditButton />} />\n\t\t\t<Main>\n\t\t\t\t{chatList ? (\n\t\t\t\t\tchatList.map(chatRoom => (\n\t\t\t\t\t\t<RoomItem\n\t\t\t\t\t\t\tkey={chatRoom.roomId}\n\t\t\t\t\t\t\t// todo : img 받아서 구현 필요\n\t\t\t\t\t\t\timgSrc={logo}\n\t\t\t\t\t\t\tpartnerName={chatRoom.partnerName}\n\t\t\t\t\t\t\tmessage={chatRoom.lastMessage}\n\t\t\t\t\t\t\tunreadCnt={chatRoom.unreadMsgCnt}\n\t\t\t\t\t\t\tonClickHander={() =>\n\t\t\t\t\t\t\t\tnavigate('/chat/room', {\n\t\t\t\t\t\t\t\t\tstate: { roomId: chatRoom.roomId, receiverId: chatRoom.partnerId },\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))\n\t\t\t\t) : (\n\t\t\t\t\t// todo : 로딩컴퍼넌트로 넘겨주자\n\t\t\t\t\t<div />\n\t\t\t\t)}\n\t\t\t</Main>\n\t\t\t<BottomNavigation />\n\t\t</>\n\t);\n};\n\nexport default ChatList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}