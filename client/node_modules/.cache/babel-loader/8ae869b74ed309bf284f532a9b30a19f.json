{"ast":null,"code":"var _jsxFileName = \"/Users/singco/dev/projects/S07P12C104/client/src/pages/Chat/ChatRoom.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\n/** @jsxImportSource @emotion/react */\n\nimport { css } from '@emotion/react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { over } from 'stompjs';\nimport SockJS from 'sockjs-client';\nimport { v4 as uuid } from 'uuid';\nimport TopNavigation from '../../components/Common/TopNavigation/TopNavigation';\nimport { ReactComponent as SendIcon } from '../../assets/send.svg';\nimport colors from '../../constants/colors';\nimport commonStyle from '../../constants/commonStyle';\nimport { useGlobalContext } from '../../contexts/GlobalContext';\nimport Main from '../../components/Common/Main/Main';\nimport Message from '../../components/Chat/Message';\nimport Date from '../../components/Chat/Date';\nimport * as ChatApi from '../../api/chat';\nimport { useUserState } from '../../context/User/UserContext';\nimport { getDay } from '../../utils/getDate';\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"@emotion/react/jsx-dev-runtime\";\nlet stompClient = null;\n\nconst ChatRoom = () => {\n  _s();\n\n  const inputRef = useRef(null);\n  const [message, setMessage] = useState('');\n  const {\n    state\n  } = useLocation();\n  const [roomId, setRoomId] = useState(state.roomId);\n  const [receiverId, setReceiverId] = useState(state.receiverId);\n  const {\n    loginedUserId\n  } = useUserState();\n  const [chats, setChats] = useState([]);\n  const navigate = useNavigate();\n  const scrollRef = useRef(null);\n\n  const sendChatHandler = async () => {\n    if (message === '') return;\n    const chatMessage = {\n      senderId: loginedUserId,\n      receiverId: receiverId,\n      roomId: roomId,\n      message\n    };\n\n    if (stompClient) {\n      if (roomId === -1) {\n        const ret = await ChatApi.makeRoom(receiverId, loginedUserId);\n        console.log(ret);\n        setRoomId(ret);\n        chatMessage.roomId = ret;\n      }\n\n      stompClient.send(`/app/chat/message`, {}, JSON.stringify(chatMessage));\n    }\n\n    setMessage('');\n    inputRef.current.focus();\n  };\n\n  const scrollToBottom = () => {\n    scrollRef.current.scrollIntoView({\n      behavior: 'smooth',\n      block: 'end',\n      inline: 'nearest'\n    });\n  };\n\n  const onMessageReceived = async payload => {\n    let payloadData = JSON.parse(payload.body);\n    await ChatApi.doRead(roomId, loginedUserId, receiverId);\n    setChats(prev => [...prev, payloadData]);\n  };\n\n  const onError = err => {\n    console.log(err);\n    throw err;\n  };\n\n  const onConnected = () => {\n    console.log('연결완료');\n\n    if (stompClient.connected) {\n      stompClient.debug = null;\n      stompClient.subscribe(`/topic/chat/room/${roomId}`, onMessageReceived);\n    }\n  };\n\n  const {\n    setHasBottom\n  } = useGlobalContext();\n  useEffect(() => {\n    setHasBottom(true);\n    return () => {\n      setHasBottom(false);\n    };\n  }, []);\n  useEffect(() => {\n    scrollToBottom();\n  }, [chats]); // 소켓연결\n\n  useEffect(() => {\n    let Sock = new SockJS(process.env.REACT_APP_SOCKET_URI);\n    stompClient = over(Sock);\n    stompClient.connect({}, onConnected, onError);\n\n    const doRead = async () => {\n      const ret = await ChatApi.doRead(roomId, loginedUserId, receiverId);\n    };\n\n    doRead();\n\n    const fetchChatLogs = async () => {\n      try {\n        const data = await ChatApi.getChagLogs(roomId);\n        setChats(data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    const findRoom = async () => {\n      try {\n        const roomId = await ChatApi.findRoom(receiverId, loginedUserId);\n        setRoomId(roomId);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    if (roomId && roomId !== -1) {\n      fetchChatLogs();\n    } else {\n      findRoom();\n    }\n\n    return () => {\n      if (stompClient.connected) stompClient.disconnect();\n    };\n  }, [roomId]);\n  let lastDate = '';\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(TopNavigation, {\n      backClick: true,\n      onBackClick: () => navigate(-1),\n      centerContent: state.nickname\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 4\n    }, this), _jsxDEV(Main, {\n      children: [chats.map(chat => {\n        const DATETIME = chat.senddatetime.replace('T', ' ').split(' ')[0];\n        const DATE = chat.senddatetime.replace('T', ' ').split(' ')[1].slice(0, 5);\n        if (DATETIME === lastDate) return _jsxDEV(Message, {\n          message: chat.message,\n          isMine: chat.senderId === loginedUserId,\n          sendTime: DATE,\n          isRead: chat.isRead\n        }, uuid(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 8\n        }, this);else {\n          lastDate = DATETIME;\n          return _jsxDEV(_Fragment, {\n            children: [_jsxDEV(Date, {\n              date: DATETIME + ' ' + getDay(chat.senddatetime)\n            }, uuid(), false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 9\n            }, this), _jsxDEV(Message, {\n              message: chat.message,\n              isMine: chat.senderId === loginedUserId,\n              sendTime: DATE,\n              isRead: chat.isRead\n            }, uuid(), false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true);\n        }\n      }), _jsxDEV(\"div\", {\n        ref: scrollRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 4\n    }, this), _jsxDEV(\"div\", {\n      className: \"input-wrapper\",\n      css: css`\n\t\t\t\t\tposition: fixed;\n\t\t\t\t\tbottom: 0;\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\tmax-width: 1200px;\n\t\t\t\t\theight: ${commonStyle.bottomHeaderHeight};\n\t\t\t\t\tbox-shadow: 0 -0.2px ${colors.text};\n\t\t\t\t\tbackground-color: ${colors.white};\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\tjustify-content: center;\n\t\t\t\t\talign-items: center;\n\t\t\t\t`,\n      children: [_jsxDEV(\"input\", {\n        ref: inputRef,\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        onKeyDown: e => {\n          if (e.key === 'Enter') sendChatHandler();\n        },\n        type: \"text\",\n        placeholder: \"\\uBA54\\uC2DC\\uC9C0\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n        css: css`\n\t\t\t\t\t\twidth: 90%;\n\t\t\t\t\t\tpadding: 10px 45px 10px 10px;\n\t\t\t\t\t\tborder: 2px solid ${colors.text};\n\t\t\t\t\t\tfont-size: 16px;\n\t\t\t\t\t\tfont-family: 'Regular';\n\t\t\t\t\t\tborder-radius: 31px;\n\t\t\t\t\t\t&:active,\n\t\t\t\t\t\t&:focus {\n\t\t\t\t\t\t\toutline: none;\n\t\t\t\t\t\t}\n\t\t\t\t\t`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 5\n      }, this), _jsxDEV(\"div\", {\n        css: css`\n\t\t\t\t\t\tposition: absolute;\n\t\t\t\t\t\tright: 5%;\n\t\t\t\t\t\tpadding: 10px;\n\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\tjustify-content: center;\n\t\t\t\t\t\talign-items: center;\n\t\t\t\t\t`,\n        children: _jsxDEV(SendIcon, {\n          onClick: sendChatHandler,\n          width: \"28\",\n          height: \"28\",\n          fill: colors.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ChatRoom, \"4MrbpDDRu6nKUY+nwP1PJQ5n+RI=\", false, function () {\n  return [useLocation, useUserState, useNavigate, useGlobalContext];\n});\n\n_c = ChatRoom;\nexport default ChatRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useEffect","useRef","useState","css","useLocation","useNavigate","over","SockJS","v4","uuid","TopNavigation","ReactComponent","SendIcon","colors","commonStyle","useGlobalContext","Main","Message","Date","ChatApi","useUserState","getDay","stompClient","ChatRoom","inputRef","message","setMessage","state","roomId","setRoomId","receiverId","setReceiverId","loginedUserId","chats","setChats","navigate","scrollRef","sendChatHandler","chatMessage","senderId","ret","makeRoom","console","log","send","JSON","stringify","current","focus","scrollToBottom","scrollIntoView","behavior","block","inline","onMessageReceived","payload","payloadData","parse","body","doRead","prev","onError","err","onConnected","connected","debug","subscribe","setHasBottom","Sock","process","env","REACT_APP_SOCKET_URI","connect","fetchChatLogs","data","getChagLogs","findRoom","disconnect","lastDate","nickname","map","chat","DATETIME","senddatetime","replace","split","DATE","slice","isRead","bottomHeaderHeight","text","white","e","target","value","key"],"sources":["/Users/singco/dev/projects/S07P12C104/client/src/pages/Chat/ChatRoom.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { over } from 'stompjs';\nimport SockJS from 'sockjs-client';\nimport { v4 as uuid } from 'uuid';\n\nimport TopNavigation from '../../components/Common/TopNavigation/TopNavigation';\nimport { ReactComponent as SendIcon } from '../../assets/send.svg';\nimport colors from '../../constants/colors';\nimport commonStyle from '../../constants/commonStyle';\nimport { useGlobalContext } from '../../contexts/GlobalContext';\nimport Main from '../../components/Common/Main/Main';\nimport Message from '../../components/Chat/Message';\nimport Date from '../../components/Chat/Date';\nimport * as ChatApi from '../../api/chat';\nimport { useUserState } from '../../context/User/UserContext';\nimport { getDay } from '../../utils/getDate';\n\nlet stompClient = null;\nconst ChatRoom = () => {\n\tconst inputRef = useRef(null);\n\tconst [message, setMessage] = useState('');\n\tconst { state } = useLocation();\n\tconst [roomId, setRoomId] = useState(state.roomId);\n\tconst [receiverId, setReceiverId] = useState(state.receiverId);\n\tconst { loginedUserId } = useUserState();\n\tconst [chats, setChats] = useState([]);\n\tconst navigate = useNavigate();\n\tconst scrollRef = useRef(null);\n\tconst sendChatHandler = async () => {\n\t\tif (message === '') return;\n\t\tconst chatMessage = {\n\t\t\tsenderId: loginedUserId,\n\t\t\treceiverId: receiverId,\n\t\t\troomId: roomId,\n\t\t\tmessage,\n\t\t};\n\t\tif (stompClient) {\n\t\t\tif (roomId === -1) {\n\t\t\t\tconst ret = await ChatApi.makeRoom(receiverId, loginedUserId);\n\t\t\t\tconsole.log(ret);\n\t\t\t\tsetRoomId(ret);\n\t\t\t\tchatMessage.roomId = ret;\n\t\t\t}\n\t\t\tstompClient.send(`/app/chat/message`, {}, JSON.stringify(chatMessage));\n\t\t}\n\t\tsetMessage('');\n\t\tinputRef.current.focus();\n\t};\n\tconst scrollToBottom = () => {\n\t\tscrollRef.current.scrollIntoView({ behavior: 'smooth', block: 'end', inline: 'nearest' });\n\t};\n\tconst onMessageReceived = async payload => {\n\t\tlet payloadData = JSON.parse(payload.body);\n\t\tawait ChatApi.doRead(roomId, loginedUserId, receiverId);\n\t\tsetChats(prev => [...prev, payloadData]);\n\t};\n\n\tconst onError = err => {\n\t\tconsole.log(err);\n\t\tthrow err;\n\t};\n\tconst onConnected = () => {\n\t\tconsole.log('연결완료');\n\t\tif (stompClient.connected) {\n\t\t\tstompClient.debug = null;\n\t\t\tstompClient.subscribe(`/topic/chat/room/${roomId}`, onMessageReceived);\n\t\t}\n\t};\n\n\tconst { setHasBottom } = useGlobalContext();\n\tuseEffect(() => {\n\t\tsetHasBottom(true);\n\t\treturn () => {\n\t\t\tsetHasBottom(false);\n\t\t};\n\t}, []);\n\tuseEffect(() => {\n\t\tscrollToBottom();\n\t}, [chats]);\n\n\t// 소켓연결\n\tuseEffect(() => {\n\t\tlet Sock = new SockJS(process.env.REACT_APP_SOCKET_URI);\n\t\tstompClient = over(Sock);\n\t\tstompClient.connect({}, onConnected, onError);\n\t\tconst doRead = async () => {\n\t\t\tconst ret = await ChatApi.doRead(roomId, loginedUserId, receiverId);\n\t\t};\n\t\tdoRead();\n\t\tconst fetchChatLogs = async () => {\n\t\t\ttry {\n\t\t\t\tconst data = await ChatApi.getChagLogs(roomId);\n\t\t\t\tsetChats(data);\n\t\t\t} catch (err) {\n\t\t\t\tconsole.log(err);\n\t\t\t}\n\t\t};\n\t\tconst findRoom = async () => {\n\t\t\ttry {\n\t\t\t\tconst roomId = await ChatApi.findRoom(receiverId, loginedUserId);\n\t\t\t\tsetRoomId(roomId);\n\t\t\t} catch (err) {\n\t\t\t\tconsole.log(err);\n\t\t\t}\n\t\t};\n\t\tif (roomId && roomId !== -1) {\n\t\t\tfetchChatLogs();\n\t\t} else {\n\t\t\tfindRoom();\n\t\t}\n\t\treturn () => {\n\t\t\tif (stompClient.connected) stompClient.disconnect();\n\t\t};\n\t}, [roomId]);\n\tlet lastDate = '';\n\treturn (\n\t\t<>\n\t\t\t<TopNavigation backClick onBackClick={() => navigate(-1)} centerContent={state.nickname} />\n\t\t\t<Main>\n\t\t\t\t{chats.map(chat => {\n\t\t\t\t\tconst DATETIME = chat.senddatetime.replace('T', ' ').split(' ')[0];\n\t\t\t\t\tconst DATE = chat.senddatetime.replace('T', ' ').split(' ')[1].slice(0, 5);\n\t\t\t\t\tif (DATETIME === lastDate)\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Message\n\t\t\t\t\t\t\t\tkey={uuid()}\n\t\t\t\t\t\t\t\tmessage={chat.message}\n\t\t\t\t\t\t\t\tisMine={chat.senderId === loginedUserId}\n\t\t\t\t\t\t\t\tsendTime={DATE}\n\t\t\t\t\t\t\t\tisRead={chat.isRead}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\telse {\n\t\t\t\t\t\tlastDate = DATETIME;\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<Date date={DATETIME + ' ' + getDay(chat.senddatetime)} key={uuid()} />\n\t\t\t\t\t\t\t\t<Message\n\t\t\t\t\t\t\t\t\tkey={uuid()}\n\t\t\t\t\t\t\t\t\tmessage={chat.message}\n\t\t\t\t\t\t\t\t\tisMine={chat.senderId === loginedUserId}\n\t\t\t\t\t\t\t\t\tsendTime={DATE}\n\t\t\t\t\t\t\t\t\tisRead={chat.isRead}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t})}\n\t\t\t\t<div ref={scrollRef} />\n\t\t\t</Main>\n\t\t\t<div\n\t\t\t\tclassName=\"input-wrapper\"\n\t\t\t\tcss={css`\n\t\t\t\t\tposition: fixed;\n\t\t\t\t\tbottom: 0;\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\tmax-width: 1200px;\n\t\t\t\t\theight: ${commonStyle.bottomHeaderHeight};\n\t\t\t\t\tbox-shadow: 0 -0.2px ${colors.text};\n\t\t\t\t\tbackground-color: ${colors.white};\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\tjustify-content: center;\n\t\t\t\t\talign-items: center;\n\t\t\t\t`}\n\t\t\t>\n\t\t\t\t<input\n\t\t\t\t\tref={inputRef}\n\t\t\t\t\tvalue={message}\n\t\t\t\t\tonChange={e => setMessage(e.target.value)}\n\t\t\t\t\tonKeyDown={e => {\n\t\t\t\t\t\tif (e.key === 'Enter') sendChatHandler();\n\t\t\t\t\t}}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"메시지를 입력하세요\"\n\t\t\t\t\tcss={css`\n\t\t\t\t\t\twidth: 90%;\n\t\t\t\t\t\tpadding: 10px 45px 10px 10px;\n\t\t\t\t\t\tborder: 2px solid ${colors.text};\n\t\t\t\t\t\tfont-size: 16px;\n\t\t\t\t\t\tfont-family: 'Regular';\n\t\t\t\t\t\tborder-radius: 31px;\n\t\t\t\t\t\t&:active,\n\t\t\t\t\t\t&:focus {\n\t\t\t\t\t\t\toutline: none;\n\t\t\t\t\t\t}\n\t\t\t\t\t`}\n\t\t\t\t/>\n\t\t\t\t<div\n\t\t\t\t\tcss={css`\n\t\t\t\t\t\tposition: absolute;\n\t\t\t\t\t\tright: 5%;\n\t\t\t\t\t\tpadding: 10px;\n\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\tjustify-content: center;\n\t\t\t\t\t\talign-items: center;\n\t\t\t\t\t`}\n\t\t\t\t>\n\t\t\t\t\t<SendIcon onClick={sendChatHandler} width=\"28\" height=\"28\" fill={colors.text} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nexport default ChatRoom;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}